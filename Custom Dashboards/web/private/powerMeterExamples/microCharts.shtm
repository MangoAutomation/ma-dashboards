<!DOCTYPE html>

<html>
<head>
	<meta charset="utf-8">
	
	<!-- Page Style -->
    <style type="text/css">
    </style>
	
	
	<title>Micro Charts</title>
        
    <!-- JQuery -->
    <script type="text/javascript" src="/modules/dashboards/web/js/jquery/jquery-1.11.1.js"></script>    	

    <link href="/modules/dashboards/web/js/jquery-ui/jquery.datetimepicker.css" rel="stylesheet">
 
    <script type="text/javascript" src="/modules/dashboards/web/js/jquery-ui/jquery.datetimepicker.js"></script>
    <!-- Charting Library -->
    <script type="text/javascript" src="/modules/dashboards/web/js/amcharts/amcharts.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/amcharts/serial.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/amcharts/gauge.js"></script>

    <!-- Mango Rest API Helper -->
    <script type="text/javascript" src="/modules/dashboards/web/js/mangoApi.js"></script>         
        
    <!-- Mango Templating API -->
    <!-- Display Widgets -->
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/serialChart.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/barChart.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/statisticsBarChart.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/pieChart.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/statistics.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/gaugeChart.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/simpleDisplay.js"></script>
    
    
    <!-- Data Providers -->
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/pointValueDataProvider.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/realtimePointValueDataProvider.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/statisticsDataProvider.js"></script>
    <!-- Templater Core -->
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/dataDisplayManager.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/dataPointMatcher.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/dataPointGroup.js"></script>  
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/pointHierarchyGrouper.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/dashboardTemplater.js"></script>
    <!-- Input Widgets -->
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/dateTimePicker.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/rollupPicker.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/timePeriodTypePicker.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/input.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/select.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/listView.js"></script>


   <script type="text/javascript">
   
   //Define Global Variables
   var templater;
   
   $( document ).ready(function(){
       
       //Setup Display Configurations
       var displayConfigurations = new Array();
       
       var kwhChart = new  SerialChartConfiguration(
               'kwhChartDiv', //Chart DIV id
               [1], //List of data provider Ids for this chart
               { //AmChart Mixins
           categoryField: "timestamp",
           autoMargins: false,
           marginLeft: 0,
           marginRight: 0,
           marginTop: 0,
           marginBottom: 0,
           chartCursor: null,
           chartScrollbar: null,
           legend: null,
           graphs: [{
               title: "Kilo watts per hour",
               valueAxis: "kwh-axis",
               showBalloon: false,
               fillAlphas: 1,
               lineColor: "green",
               type: "smoothedLine",
               valueField: "value"
           }],
           valueAxes: [{
               id: "kwh-axis",
               gridAlpha: 0,
               axisAlpha: 0
           }],
           categoryAxes: [{
               id: "kwh-axis",
               gridAlpha: 0,
               axisAlpha: 0,
               startOnAxis: true,
               parseDates: true,
           }],


       });
       displayConfigurations.push(kwhChart);
               
       //Create a bar chart for use with Point Value Data Providers
       var kwhBarChart = new BarChartConfiguration(
               'kwhBarChartDiv',
               [1], //List of data provider Ids for this chart
               { //AmChart Mixins
                   rotate: false,
                   categoryField: "time",
                   autoMargins: false,
                   marginLeft: 0,
                   marginRight: 0,
                   marginTop: 0,
                   marginBottom: 0,
                   chartCursor: null,
                   chartScrollbar: null,
                   legend: null,
                   categoryAxis: {
                       gridPosition: "start",
                       labelRotation: 45
                   },
                   graphs: [
                              {
                                  showBalloon: false,
                                  fillAlphas: 1,
                                  lineAlpha: 1,
                                  type: "column",
                                  valueField: "value"
                              }
                          ],
                          guides: [],
                          valueAxes: [
                              {
                                  axisAlpha: 0,
                                  gridAlpha: 0,
                              }
                          ],
       },{//Empty Mango Chart Mixins
           /**
            * Default behaviour is to average them values
            * Data Provider Listener
            * On Data Provider load we add new data
            */
           onLoad: function(data, dataPoint){

               //Create one entry for every piece of data
               for(var i=0; i<data.length; i++){
                   var entry = {
                           time: new Date(data[i].timestamp).toLocaleDateString(),
                           value: data[i].value
                   };
                   this.amChart.dataProvider.push(entry);
               }
               this.amChart.validateData();
           }
       },{
       });
       displayConfigurations.push(kwhBarChart);       
       //Create Data Providers
       var dataProviders = new Array();
       var customDataProvider = new PointValueDataProvider(1, {
           /**
            * Method that is called before publishing the data to the Displays
            * it is here that we can modify the data
            */
           manipulateData: function(pointValues, dataPoint){
              
               var newData = new Array();
               
               if(pointValues.length == 0)
                   return newData;
               
               var previous = pointValues[0]
               //Subtract previous value from current.
               for(var i=1; i<pointValues.length; i++){
                   var current = pointValues[i];
                   var entry = {
                           value: current.value - previous.value,
                           timestamp: current.timestamp
                   };
                   newData.push(entry);
                   
                   //Move along
                   previous = current;
               }
               
               return newData;
           }           
       });
       dataProviders.push(customDataProvider);
       
       //Setup Point Configurations
       var pointConfigurations = new Array();
       pointConfigurations.push(new DataPointMatchConfiguration(1, [{matchAttribute: 'name', regex: /.*\(kWh\)/}]));

       //Setup Groups
       var meterGroups = new DataPointGroupConfiguration({
           groupBy: 'Folder',
           labelAttribute: 'name',
           matchConfigurations: [{
               matchAttribute: 'path',
               regex: /\/Buildings\/City Plex\/Meters\/M.*/
           }]
           });
       
       var groupConfigurations = new Array();
       groupConfigurations.push(meterGroups);
       
       //Create a custom group list view
       var groupListView = new ListViewConfiguration('groupsList', {}, {styleClass: "ui-btn"});
       
       //Setup Templater, Previous 30 Days (more accurately previous 24Hrs * 30);
       var to = new Date();
       var from = new Date(to.getTime() - 1000*60*60*24*30);
       var templaterConfig = {
               debug: true,
               type: 'PointHierarchy',
               displayConfigurations: displayConfigurations,
               pointConfigurations: pointConfigurations,
               groupConfigurations: groupConfigurations,
               dataProviders: dataProviders,
               groupSelectConfiguration: groupListView,
               
               //Setup the Date/Rollups
               startDate: from,
               endDate: to,
               rollup: 'AVERAGE',
               timePeriodType: 'DAYS',
               timePeriods: 1,
       };
       templater = new DashboardTemplater(templaterConfig);
       
            
   });// End When page Ready
   </script>





</head>
<body>
    <div id="errors"></div> <!-- The templater defaults to using a div with id errors if it exists -->
    <ul id="groupsList"></ul>
    <p> Micro Charts are just trimmed down versions of the larger chart placed into a small div.  Click the Desired Meter to start.
    </p>
    
    <div  id="kwhChartDiv" style="width:200px; height:100px; vertical-align: middle;  display: inline-block; padding: 10px;"></div>
    <div  id="kwhBarChartDiv" style="width:200px; height:100px; vertical-align: top;  display: inline-block; padding: 10px;"></div>
    
</body>
</html>

