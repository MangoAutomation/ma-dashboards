<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8">
    <!-- Add the Mango Favicon -->
    <link rel="icon" href="/2.5.0/images/favicon.ico">
        
    <!-- Page Style -->
    <style type="text/css">
    </style>
    
    
    <title>30 Day Kwh Bar Chart</title>
    
    <!-- JQuery -->
    <script type="text/javascript" src="/modules/dashboards/web/js/jquery/jquery-1.11.1.js"></script>       
    
    <script type="text/javascript" src="/modules/dashboards/web/js/moment-with-locales.min.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/moment-timezone-with-data.min.js"></script>
    <link href="/modules/dashboards/web/js/jquery-ui/jquery.datetimepicker.css" rel="stylesheet">
    <script type="text/javascript" src="/modules/dashboards/web/js/jquery-ui/jquery.datetimepicker.js"></script>
    
    <!-- Charting Library -->
    <script type="text/javascript" src="/modules/dashboards/web/js/amcharts/amcharts.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/amcharts/serial.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/amcharts/gauge.js"></script>

    <!-- Mango Rest API Helper -->
    <script type="text/javascript" src="/mango-javascript/v1/mangoApi.js"></script>         
        
    <!-- Mango Templating API -->
    <!-- Display Widgets -->
    <script type="text/javascript" src="/mango-javascript/v1/serialChart.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/barChart.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/statisticsBarChart.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/pieChart.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/statistics.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/gaugeChart.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/simpleDisplay.js"></script>
    
    
    <!-- Data Providers -->
    <script type="text/javascript" src="/modules/dashboards/web/js/extend.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/dataProvider.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/pointValueDataProvider.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/realtimePointValueDataProvider.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/statisticsDataProvider.js"></script>
    <!-- Templater Core -->
    <script type="text/javascript" src="/mango-javascript/v1/dataDisplayManager.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/dataPointMatcher.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/dataPointGroup.js"></script>  
    <script type="text/javascript" src="/mango-javascript/v1/pointHierarchyGrouper.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/dashboardTemplater.js"></script>
    <!-- Input Widgets -->
    <script type="text/javascript" src="/mango-javascript/v1/dateTimePicker.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/rollupPicker.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/timePeriodTypePicker.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/input.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/select.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/listView.js"></script>
    

   <script type="text/javascript">
   
   //Define Global Variables
   var templater;
   
   $( document ).ready(function(){
       
       //Since this data provider is used for Both charts we define it first
       var barChartDataProvider = new PointValueDataProvider(1, {
           /**
            * Method that is called before publishing the data to the Displays
            * it is here that we can modify the data
            */
           manipulateData: function(pointValues, dataPoint){
              
               var newData = new Array();
               
               if(pointValues.length == 0)
                   return newData;
               
               var previous = pointValues[0]
               //Subtract previous value from current.
               for(var i=1; i<pointValues.length; i++){
                   var current = pointValues[i];
                   var entry = {
                           value: current.value - previous.value,
                           timestamp: current.timestamp
                   };
                   newData.push(entry);
                   
                   //Move along
                   previous = current;
               }
               
               return newData;
           }           
       });
       
       
       //Setup a Display Manager for the Bar Chart
       var kwhDisplayConfigurations = new Array();
       //Setup The Bar Chart
       //Create a bar chart for use with Point Value Data Providers
       var kwhBarChart = new BarChartConfiguration(
               'kwhBarChartDiv',
               [1], //List of data provider Ids for this chart
               { //AmChart Mixins
                   rotate: false,
                   categoryField: "time",
                   categoryAxis: {
                       "gridPosition": "start",
                       "labelRotation": 45
                   },
                   graphs: [
                              {
                                  "balloonText": "Average:[[value]]",
                                  "fillAlphas": 0.8,
                                  "id": "AmGraph-1",
                                  "lineAlpha": 0.2,
                                  "title": "Total",
                                  "type": "column",
                                  "valueField": "value"
                              }
                          ],
                          "guides": [],
                          "valueAxes": [
                              {
                                  "id": "ValueAxis-1",
                                  "position": "top",
                                  "axisAlpha": 0
                              }
                          ],
       },{//Empty Mango Chart Mixins
           /**
            * Default behaviour is to average them values
            * Data Provider Listener
            * On Data Provider load we add new data
            */
           onLoad: function(data, dataPoint){
               this.removeLoading();

               //Create one entry for every piece of data
               for(var i=0; i<data.length; i++){
                   var entry = {
                           time: new Date(data[i].timestamp).toLocaleDateString(),
                           value: data[i].value
                   };
                   this.amChart.dataProvider.push(entry);
               }
               this.amChart.validateData();
           }
       },{
       });
       kwhDisplayConfigurations.push(kwhBarChart);
       var kwhBarChartDisplayManager = new DataDisplayManager(kwhDisplayConfigurations);
       kwhBarChartDisplayManager.addProvider(barChartDataProvider); //Ensure we add our data provider
       
       //Setup Display Configurations for templater 1
       var displayConfigurations = new Array();
       var kwhChart = new  SerialChartConfiguration(
               'kwhChartDiv', //Chart DIV id
               [1], //List of data provider Ids for this chart
               { //AmChart Mixins
           titles: [{
               id: "Title-1",
               size: 15,
               text: "KWH "
           }],
           categoryField: "timestamp",
           graphs: [{
               title: "Kilo watts per hour",
               valueAxis: "kwh-axis",
               bullet: "square",
               bulletSize: 6,
               lineColor: "green",
               lineThickness: 1,
               negativeLineColor: "red",
               type: "smoothedLine",
               valueField: "value"
           }],
           valueAxes: [{
               id: "kwh-axis",
               title: " KWH ",
               position: "left"
           }],
       });
       displayConfigurations.push(kwhChart);
       
       //Create Data Providers
       var dataProviders = new Array();
       var customDataProvider = new PointValueDataProvider(1, {
           /**
            * Method that is called before publishing the data to the Displays
            * it is here that we can modify the data
            */
           manipulateData: function(pointValues, dataPoint){
              
               var newData = new Array();
               
               if(pointValues.length == 0)
                   return newData;
               
               var previous = pointValues[0]
               //Subtract previous value from current.
               for(var i=1; i<pointValues.length; i++){
                   var current = pointValues[i];
                   var entry = {
                           value: current.value - previous.value,
                           timestamp: current.timestamp
                   };
                   newData.push(entry);
                   
                   //Move along
                   previous = current;
               }
               
               return newData;
           }           
       });
       dataProviders.push(customDataProvider);
       
       //Setup Point Configurations
       var pointConfigurations = new Array();
       pointConfigurations.push(new DataPointMatchConfiguration(1, [{matchAttribute: 'name', regex: /.*\(kWh\)/}]));

       //Setup Groups
       var meterGroups = new DataPointGroupConfiguration({
           groupBy: 'Folder',
           labelAttribute: 'name',
           matchConfigurations: [{
               matchAttribute: 'path',
               regex: /\/Buildings\/City Plex\/Meters\/M.*/
           }]
           });
       
       var groupConfigurations = new Array();
       groupConfigurations.push(meterGroups);
       
       //Create a custom group list view
       var groupListView = new ListViewConfiguration('groupsList', {}, {styleClass: "ui-btn"});

       
       //Setup Templater, Previous 30 Days (more accurately previous 24Hrs * 30);
       var templaterConfig = {
               debug: true,
               type: 'PointHierarchy',
               displayConfigurations: displayConfigurations,
               pointConfigurations: pointConfigurations,
               groupConfigurations: groupConfigurations,
               dataProviders: dataProviders,
               groupSelectConfiguration: groupListView,
               
               /**
                * Since we want to tie in another display manager 
                * that is already configured we can just 
                * refresh it here.
                */
               groupChanged: function(groupId){
                   // call super function
                   DashboardTemplater.prototype.groupChanged.apply(this, arguments);
                   
                   // fetch the point configurations from the templater's display manager
                   var pointConfigurations = this.displayManager.dataProviders[0].pointConfigurations;
                   
                   //Refresh the other display Manager
                   var to = new Date();
                   var from = new Date(to.getTime() - 1000*60*60*24*30);
                   var dataProviderSettings = {
                           //Setup the Date/Rollups
                           from: from,
                           to: to,
                           rollup: 'AVERAGE',
                           timePeriodType: 'DAYS',
                           timePeriods: 1,
                   };
                   
                   //Clear out the bar chart for new data
                   kwhBarChartDisplayManager.clear(true);
                   kwhBarChartDisplayManager.addDataPointConfigurations(pointConfigurations);
                   kwhBarChartDisplayManager.refresh(null, dataProviderSettings);
               }
       };
       templater = new DashboardTemplater(templaterConfig);

            
   });// End When page Ready
   </script>





</head>
<body>
    <div id="errors"></div> <!-- The templater defaults to using a div with id errors if it exists -->
    <ul id="groupsList"></ul>
    <p> Using a custom Point Value Data Provider we computer the change in kwh per sample.  The Line chart plots the 
        change for every day.  The Bar Chart plots the total per day.  The Bar charts are preset to the past 30 Days of Averages 
        and the Line chart uses the inputs on the page. Click the Desired Meter to start.
    </p>
    <div>
        <label for="startDate">Start Date</label>
        <input id="startDate"></input>
    </div>
    <div>
        <label for="endDate">End Date</label>
        <input id="endDate"></input>
    </div>
    <div>
      <label for="rollup">Rollup:</label>
      <select id="rollup"></select>
    </div>
    <div>
      <label for="timePeriodType">Time Period:</label>
      <select id="timePeriodType"></select>
    </div>
    <div class="ui-field-contain"  style="width=79%">
      <label for="timePeriod">Periods:</label>
      <input id="timePeriod" type="number" value="1" class="form-control"/>
    </div>
    
    <hr></hr>

    <div  id="kwhChartDiv" style="width:100%; height:400px; vertical-align: top;  display: inline-block; padding: 10px;"></div>
    <hr></hr>
    <div  id="kwhBarChartDiv" style="width:100%; height:400px; vertical-align: top;  display: inline-block; padding: 10px;"></div>
    
</body>
</html>

