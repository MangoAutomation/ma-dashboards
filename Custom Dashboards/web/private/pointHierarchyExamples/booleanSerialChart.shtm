<!DOCTYPE html>

<html>
<head>
	<meta charset="utf-8">
	<!-- Add the Mango Favicon -->
    <link rel="icon" href="/images/favicon.ico">
    
	<!-- Page Style -->
    <style type="text/css">
    </style>
	
	
	<title>Boolean Serial Chart</title>
    
    <!-- JQuery -->
    <script type="text/javascript" src="/resources/jquery/jquery-1.11.2.js"></script>    	
        
    <link href="/resources/jquery-ui/jquery.datetimepicker.css" rel="stylesheet">
 
    <script type="text/javascript" src="/resources/jquery-ui/jquery.datetimepicker.js"></script>
    <!-- Charting Library -->
    <script type="text/javascript" src="/resources/amcharts/amcharts.js"></script>
    <script type="text/javascript" src="/resources/amcharts/serial.js"></script>
    <script type="text/javascript" src="/resources/amcharts/gauge.js"></script>

    <!-- Mango Rest API Helper -->
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/v1/mangoApi.js"></script>         
        
	<!-- Mango Templating API -->
    <!-- Display Widgets -->
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/v1/serialChart.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/v1/barChart.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/v1/statisticsBarChart.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/v1/pieChart.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/v1/statistics.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/v1/gaugeChart.js"></script>
    
    <!-- Data Providers -->
    <script type="text/javascript" src="/resources/extend.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/v1/dataProvider.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/v1/pointValueDataProvider.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/v1/historicalPointValueDataProvider.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/v1/realtimePointValueDataProvider.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/v1/statisticsDataProvider.js"></script>
    <!-- Input Widgets -->
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/v1/dateTimePicker.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/v1/rollupPicker.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/v1/timePeriodTypePicker.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/v1/input.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/v1/select.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/v1/listView.js"></script>
    <!-- Templater Core -->
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/v1/dataDisplayManager.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/v1/dataPointMatcher.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/v1/dataPointGroup.js"></script>  
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/v1/pointHierarchyGrouper.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/v1/dashboardTemplater.js"></script>
    
   <script type="text/javascript">
   
   //Define Global Variables
   var templater;
   
   $( document ).ready(function(){
       
       //Setup Display Configurations
       var displayConfigurations = new Array();
       var chart = new  SerialChartConfiguration(
               'chartDiv', //Chart DIV id
               [1,2], //List of data provider Ids for this chart
               { //AmChart Mixins
           titles: [{
               id: "Title-1",
               size: 15,
               text: "Binary Chart"
           }],
           categoryField: "timestamp",
           graphs: [{
               title: "Binary",
               valueAxis: "binary-axis",
               bulletSize: 6,
               lineColor: "green",
               lineThickness: 1,
               negativeLineColor: "red",
               type: "step",
               valueField: "binary",
               /**
                * Customize the Balloon function to show the value
                * of '1' or '0'
                */
               balloonFunction: function(graphDataItem, amGraph){
                   if(typeof graphDataItem.values != 'undefined'){
                       return graphDataItem.category + "<br>" + graphDataItem.values.value.toFixed(0);
                   }else{
                       return "";
                   }
               },
           },{
               title: "Boolean",
               valueAxis: "boolean-axis",
               bulletSize: 6,
               lineColor: "blue",
               lineThickness: 1,
               negativeLineColor: "red",
               type: "step",
               valueField: "boolean",
               /**
                * Customize the Balloon function to show the value
                * of 'true' or 'false'
                */
               balloonFunction: function(graphDataItem, amGraph){
                   if(typeof graphDataItem.values != 'undefined'){
                       var value;
                       if(graphDataItem.values.value == 1)
                           value = "true";
                       else
                           value = "false";
                       return graphDataItem.category + "<br>" + value;
                   }else{
                       return "";
                   }
               },

           }],
           valueAxes: [{
               id: "binary-axis",
               title: " Binary",
               position: "left",
               labelFunction: function(value, valueText, valueAxis){
                   if(value == 1)
                       return "1";
                   else if(value == 0)
                       return "0";
                   else return ""; //No Labels otherwise
               }
           },{
               id: "boolean-axis",
               title: " Boolean",
               position: "right",
               labelFunction: function(value, valueText, valueAxis){
                   if(value == 1)
                       return "true";
                   else if(value == 0)
                       return "false";
                   else return ""; //No Labels otherwise
               }
           }],
       },{//empty Mango Chart Mixins
       },{//Confuguration Mixins
           //Multi-series chart so create mappings from point to a graph valueField
           dataPointMappings: [{
                   xidEndsWith: 'binary',
                   valueField: 'boolean',
                   hasDataAttributes: ['dataType'] //Hack to allow multiple data providers for the same point
               },{
                   xidEndsWith: 'binary',
                   valueField: 'binary',
                   hasDataAttributes: ['binary']  //Since we are putting boolean: true in the data for this series it will match on this
               }]
       });
       displayConfigurations.push(chart);

       //Create Data Providers (NOT WORKING YET... NEED TO DETERMINE HOW TO GET AM CHARTS TO USE STRING VALUES)
       var dataProviders = new Array();
       var booleanSeriesDataProvider = new HistoricalPointValueDataProvider(2, {
           /**
            * Method that is called before publishing the data to the Displays
            * it is here that we can modify the data
            */
           manipulateData: function(pointValues, dataPoint){
              
               var newData = new Array();
               
               if(pointValues.length == 0)
                   return newData;

               //Subtract previous value from current.
               for(var i=0; i<pointValues.length; i++){
                   var value;
                   if(pointValues[i].value == true)
                       value = 1;
                   else
                       value = 0;
                   var entry = {
                           binary: true,
                           value: value,
                           timestamp: pointValues[i].timestamp
                   };
                   newData.push(entry);
               }
               
               return newData;
           }           
       });
       dataProviders.push(booleanSeriesDataProvider);
       
       
       //Setup Point Configurations
       var pointConfigurations = new Array();
       pointConfigurations.push(new DataPointMatchConfiguration(1, [{matchAttribute: 'xid', regex: /binary/}], {providerType: 'HistoricalPointValue'}));
       pointConfigurations.push(new DataPointMatchConfiguration(2, [{matchAttribute: 'xid', regex: /binary/}]));

       //Setup Groups
       var group = new DataPointGroupConfiguration({
           groupBy: 'Folder',
           labelAttribute: 'name',
           matchConfigurations: [{
               matchAttribute: 'path',
               regex: /Target Folder/
           }]
           });
       
       var groupConfigurations = new Array();
       groupConfigurations.push(group);
       
       //Create a custom group list view
       var groupListView = new ListViewConfiguration('groupsList', {}, {styleClass: "ui-btn"});
       
       //Setup Templater
       var templaterConfig = {
               debug: true,
               type: 'PointHierarchy',
               displayConfigurations: displayConfigurations,
               pointConfigurations: pointConfigurations,
               groupConfigurations: groupConfigurations,
               dataProviders: dataProviders,
               groupSelectConfiguration: groupListView,
               historicalSamples: 10, //Show 50 last samples for Historical Data Providers 
       }
       
       
       
       templater = new DashboardTemplater(templaterConfig);
            
   });// End When page Ready
   
   </script>
</head>
<body>
    <h2>This example is deprecated because it uses the legacy Javascript API.  For more up-to-date examples see the tutorial's folder.</h2>

    <div id="errors"></div> <!-- The templater defaults to using a div with id errors if it exists -->
    <ul id="groupsList"></ul>
    <p>Serial Chart using 2 data providers mapped to the binary point to manipulate the data into boolean and binary values. Click the Target Folder to start.
    </p>
    <div  id="chartDiv" style="width:100%; height:400px; vertical-align: top;  display: inline-block; padding: 10px;"></div>
</body>
</html>

