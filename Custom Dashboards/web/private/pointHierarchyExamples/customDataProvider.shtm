<!DOCTYPE html>

<html>
<head>
	<meta charset="utf-8">
	
	<!-- Page Style -->
    <style type="text/css">
    </style>
	
	
	<title>Custom Data Provider</title>
    
    <!-- JQuery -->
    <script type="text/javascript" src="/modules/dashboards/web/js/jquery/jquery-1.11.1.js"></script>    	

    <link href="/modules/dashboards/web/js/jquery-ui/jquery.datetimepicker.css" rel="stylesheet">
 
    <script type="text/javascript" src="/modules/dashboards/web/js/jquery-ui/jquery.datetimepicker.js"></script>
    <!-- Charting Library -->
    <script type="text/javascript" src="/modules/dashboards/web/js/amcharts/amcharts.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/amcharts/serial.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/amcharts/gauge.js"></script>

    <!-- Mango Rest API Helper -->
    <script type="text/javascript" src="/mango-javascript/v1/mangoApi.js"></script>         
        
    <!-- Mango Templating API -->
    <!-- Display Widgets -->
    <script type="text/javascript" src="/mango-javascript/v1/serialChart.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/barChart.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/statisticsBarChart.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/pieChart.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/statistics.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/gaugeChart.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/simpleDisplay.js"></script>
    
    
    <!-- Data Providers -->
    <script type="text/javascript" src="/mango-javascript/v1/pointValueDataProvider.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/realtimePointValueDataProvider.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/statisticsDataProvider.js"></script>
    <!-- Templater Core -->
    <script type="text/javascript" src="/mango-javascript/v1/dataDisplayManager.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/dataPointMatcher.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/dataPointGroup.js"></script>  
    <script type="text/javascript" src="/mango-javascript/v1/pointHierarchyGrouper.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/dashboardTemplater.js"></script>
    <!-- Input Widgets -->
    <script type="text/javascript" src="/mango-javascript/v1/dateTimePicker.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/rollupPicker.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/timePeriodTypePicker.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/input.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/select.js"></script>
    <script type="text/javascript" src="/mango-javascript/v1/listView.js"></script>
    

   <script type="text/javascript">
   
   //Define Global Variables
   var templater;
   
   $( document ).ready(function(){
       
       //Setup Display Configurations
       var displayConfigurations = new Array();
       
       //For this example we will use a SimpleDisplay to fill a table with values
       var simpleDisplay = new SimpleDisplayConfiguration([1], 
               {
                  onClear: function(){
                      //Do anything required to clear our display
                      $('#displayTableBody').empty();
                  },
                  onLoad: function(pointValues, dataPoint){
                      //Do anything required to fills our display with data
                      for(var i=0; i<pointValues.length; i++){
                          $('#displayTableBody').append(
                                  "<tr><td>" + dataPoint.name + 
                                  "</td><td>" + pointValues[i].value.toFixed(2) +
                                  "</td><td>" + new Date(pointValues[i].timestamp) +
                                  "</td></tr>");
                      }
                      
                  }
               }); //Just assign data provider ids
       displayConfigurations.push(simpleDisplay);
               
               
       //Create Data Providers
       var dataProviders = new Array();
       var customDataProvider = new PointValueDataProvider(1, {
           /**
            * Method that is called before publishing the data to the Displays
            * it is here that we can modify the data
            */
           manipulateData: function(pointValues, dataPoint){
              
               var newData = new Array();
               
               if(pointValues.length == 0)
                   return newData;
               
              
               var previous = pointValues[0]
               //Subtract previous value from current.
               for(var i=1; i<pointValues.length; i++){
                   var current = pointValues[i];
                   var entry = {
                           value: current.value - previous.value,
                           timestamp: current.timestamp
                   };
                   newData.push(entry);
                   
                   //Move along
                   previous = current;
               }
               
               return newData;
           }           
       });
       dataProviders.push(customDataProvider);
       
       //Setup Point Configurations
       var pointConfigurations = new Array();
       pointConfigurations.push(new DataPointMatchConfiguration(1, [{matchAttribute: 'xid', regex: /voltage/}]))

       //Setup Groups
       var group = new DataPointGroupConfiguration({
           groupBy: 'Folder',
           labelAttribute: 'name',
           matchConfigurations: [{
               matchAttribute: 'path',
               regex: /Target Folder/
           }]
           });
       
       var groupConfigurations = new Array();
       groupConfigurations.push(group);
       
       //Create a custom group list view
       var groupListView = new ListViewConfiguration('groupsList', {}, {styleClass: "ui-btn"});
       
       //Setup Templater, Defaults to previous 12 Hours
       var templaterConfig = {
               debug: true,
               type: 'PointHierarchy',
               displayConfigurations: displayConfigurations,
               pointConfigurations: pointConfigurations,
               groupConfigurations: groupConfigurations,
               dataProviders: dataProviders,
               groupSelectConfiguration: groupListView,
       };
       
       
       
       templater = new DashboardTemplater(templaterConfig);
       
       
            
   });// End When page Ready
   </script>





</head>
<body>
    <div id="errors"></div> <!-- The templater defaults to using a div with id errors if it exists -->
    <ul id="groupsList"></ul>
    <p>Customizing Data Providers allows to manipulate the data before it is published to the Displays.
        In this example we compute the change in value to the previous value.  We also use a SimpleDisplayConfiguration
        to render a table with our modified point values. Click the Target Folder to start.
    </p>
    
    <table>
     <thead>
       <tr>
         <th>Point Name</th>
         <th>Value</th>
         <th>Time</th>
       </tr>
     </thead>
     <tbody id="displayTableBody">
     </tbody>
  </table>
    
</body>
</html>

