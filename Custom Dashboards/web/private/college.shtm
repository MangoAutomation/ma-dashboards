<!DOCTYPE html>

<!-- * Copyright (C) 2014-2016 Mango.-->
<!-- *@author Joseph Mills-->
<!-- * This program is free software; you can redistribute it and/or modify-->
<!-- * it under the terms of the GNU General Public License as published by-->
<!-- * the Free Software Foundation; version 3.-->
<!-- *-->
<!-- * This program is distributed in the hope that it will be useful,-->
<!-- * but WITHOUT ANY WARRANTY; without even the implied warranty of-->
<!-- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the-->
<!-- * GNU General Public License for more details.-->
<!-- *-->
<!-- * You should have received a copy of the GNU General Public License-->
<!-- * along with this program.  If not, see <http://www.gnu.org/licenses/ -->
<html>
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	
	
	  <!-- Page Style -->
        <style type="text/css">
      .ui-field-contain>label, .ui-field-contain .ui-controlgroup-label, .ui-field-contain>.ui-rangeslider>label{color:whitesmoke;}
h1,h2,h3,h4,h5{
color: whitesmoke !important;
}

.ui-page-theme-a .ui-btn, html .ui-bar-a .ui-btn, html .ui-body-a .ui-btn, html body .ui-group-theme-a .ui-btn, html head+body .ui-btn.ui-btn-a, .ui-page-theme-a .ui-btn:visited, html .ui-bar-a .ui-btn:visited, html .ui-body-a .ui-btn:visited, html body .ui-group-theme-a .ui-btn:visited, html head+body .ui-btn.ui-btn-a:visited {
background-color: #95A5A6 !important;
border-color: #d3d3d3 !important;
color: whitesmoke !important;
text-shadow: none !important;
}

.ui-panel-position-left.ui-panel-display-reveal, .ui-panel-open.ui-panel-position-left {
left: 0;
background-color: #2C3E50 !important;
}


.ui-header,.ui-footer{
background-color: #2C3E50 !important;
}
body{
background-color: #95A5A6;
}
.ui-content{
background-color: #95A5A6 !important;
}

.amChartsTab{
    width:100%; 
    height:350px;
    vertical-align: top;
    display: inline-block;
    padding: 10px


}
.lineChartTabs{
    max-width: 75% !important;
    max-height: 50% !important;
    margin-right: auto;
    background-color: #FFF;
    border-style: solid;
    border-color: #d3d3d3;
    border-width: 3px;
    margin-left: 25%;
    background-color: #2C3E50;
}
.statsChart{
    max-width: 75% !important;
    max-height: 50% !important;
    margin-right: auto;
    margin-left: 25%;
    margin-top: -1000px !important;
    background-color: #FFF ;
    border-style: solid;
    border-color: #d3d3d3;
    border-width: 3px;
    background-color: #2C3E50;
}

.barChartLeft{
    max-width: 25% !important;
    max-height: 100% !important;
    height: 1000px; 
    margin-right: auto;
    margin-left: 0%;
    background-color: #FFF ;
    border-style: solid;
    border-color: #d3d3d3;
    border-width: 3px;
    background-color: #2C3E50;
}
.mynav{
    width: 50%;
    margin-left: 50%;
    margin-right: auto;

}

timePeriod{
width: 25px; 

}

        </style>
	
	
	<title>Meters</title>
	<!-- We should never reference online resources as not all of our installations have internet access -->
    <link rel="stylesheet" href="http://fonts.googleapis.com/css?family=Open+Sans:300,400,700">
    
    <link rel="stylesheet" href="/modules/dashboards/web/js/jquery-mobile/jquery.mobile-1.4.4.min.css">
    <link rel="stylesheet" href="/modules/dashboards/web/js/joseph/jqm-demos.css">
        
    <!-- JQuery -->
    <script type="text/javascript" src="/modules/dashboards/web/js/jquery/jquery-1.11.1.js"></script>    	

    <!-- Joseph Page -->
    <script src="/modules/dashboards/web/js/joseph/index.js"></script>

	<!-- JQuery Mobile -->
	<script src="/modules/dashboards/web/js/jquery-mobile/jquery.mobile-1.4.4.min.js"></script>


       
    <link href="/modules/dashboards/web/js/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/modules/dashboards/web/js/jquery-ui/jquery.datetimepicker.css" rel="stylesheet">
    <link href="/modules/dashboards/web/private/css/dashboard.css" rel="stylesheet">
        
       
 
    <script type="text/javascript" src="/modules/dashboards/web/js/jquery-ui/jquery.datetimepicker.js"></script>
    <!-- Charting Library -->
    <script type="text/javascript" src="/modules/dashboards/web/js/amcharts/amcharts.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/amcharts/serial.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/amcharts/gauge.js"></script>
    
    <!-- Bootstrap -->
    <script src="/modules/dashboards/web/js/bootstrap/js/bootstrap.min.js"></script>
    
    
    <!-- Mango Rest API Helper -->
    <script type="text/javascript" src="/modules/dashboards/web/js/mangoApi.js"></script>         
    
    <!-- Mango AM Charts Helper -->
    <script type="text/javascript" src="/modules/dashboards/web/js/mangoAmChartsApi.js"></script>
        
	<!-- Mango Templating API -->
	<script type="text/javascript" src="/modules/dashboards/web/js/mango/dataDisplayManager.js"></script>
	<script type="text/javascript" src="/modules/dashboards/web/js/mango/serialChart.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/barChart.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/statisticsBarChart.js"></script>
	<script type="text/javascript" src="/modules/dashboards/web/js/mango/pieChart.js"></script>
	<script type="text/javascript" src="/modules/dashboards/web/js/mango/statistics.js"></script>
	<script type="text/javascript" src="/modules/dashboards/web/js/mango/pointValueDataProvider.js"></script>
	<script type="text/javascript" src="/modules/dashboards/web/js/mango/statisticsDataProvider.js"></script>
	<script type="text/javascript" src="/modules/dashboards/web/js/mango/dataPointMatcher.js"></script>
	<script type="text/javascript" src="/modules/dashboards/web/js/mango/dataPointGroup.js"></script>  
	<script type="text/javascript" src="/modules/dashboards/web/js/mango/pointHierarchyGrouper.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/dashboardTemplater.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/dateTimePicker.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/rollupPicker.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/timePeriodTypePicker.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/input.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/select.js"></script>
    <script type="text/javascript" src="/modules/dashboards/web/js/mango/listView.js"></script>
    
    
    

   <script type="text/javascript">
    var templater;
   $( document ).ready(function(){

       //Setup Display Configurations
       var displayConfigurations = new Array();
       var kwhChart = new  SerialChartConfiguration(
               'kwhChartDiv', //Chart DIV id
               [1], //List of data provider Ids for this chart
               { //AmChart Mixins
           titles: [{
               id: "Title-1",
               size: 15,
               text: "KWH"

           }],
           categoryField: "timestamp",
           color: "whitesmoke",
					"startEffect": "bounce",

           graphs: [{
               title: "Kilo watts per hour",
               valueAxis: "kwh-axis",
               
               //Function to render the text inside the balloons
               //TODO Make this bulletproof and create a way to get a default 'graph'
               balloonFunction: function(graphDataItem, amGraph){
                   if(typeof graphDataItem.values != 'undefined'){
                       return graphDataItem.category + "<br>" + graphDataItem.values.value.toFixed(2);
                   }else{
                       return "";
                   }
               },
               
               bullet: "square",
               bulletSize: 6,
               lineColor: "green",
               lineThickness: 1,
               negativeLineColor: "red",
               type: "smoothedLine",
               valueField: "value"
           }],
           valueAxes: [{
               id: "kwh-axis",
               title: " KWH ",
               position: "left"
           }],
       });
       displayConfigurations.push(kwhChart);




//AMPS       
       var ampsChart = new  SerialChartConfiguration(
               'ampsChartDiv', //Chart DIV id
               [2,3,4], //List of data provider Ids for this chart
               { //AmChart Mixins
           titles: [{
               id: "Title-1",
               size: 15,
               text: "Amps "
           }],
           categoryField: "timestamp",
           color: "whitesmoke",
					"startEffect": "bounce",

           graphs: [{
               title: "Amps Phase A",
               valueAxis: "phaseA-axis",
               //Function to render the text inside the balloons
               //TODO Make this bulletproof and create a way to get a default 'graph'
               balloonFunction: function(graphDataItem, amGraph){
                   if(typeof graphDataItem.values != 'undefined'){
                       return graphDataItem.category + "<br>" + graphDataItem.values.value.toFixed(2);
                   }else{
                       return "";
                   }
               },
               bullet: "square",
               bulletSize: 6,
               lineColor: "green",
               lineThickness: 1,
               negativeLineColor: "red",
               type: "smoothedLine",
               valueField: "phaseA"
           },{              
               title: "Amps Phase B",
               valueAxis: "phaseB-axis",
               //Function to render the text inside the balloons
               //TODO Make this bulletproof and create a way to get a default 'graph'
               balloonFunction: function(graphDataItem, amGraph){
                   if(typeof graphDataItem.values != 'undefined'){
                       return graphDataItem.category + "<br>" + graphDataItem.values.value.toFixed(2);
                   }else{
                       return "";
                   }
               },
               bullet: "round",
               bulletSize: 6,
               lineColor: "red",
               lineThickness: 1,
               negativeLineColor: "red",
               type: "smoothedLine",
               valueField: "phaseB"
           },{              
               title: "Amps Phase C",
               valueAxis: "phaseC-axis",
               //Function to render the text inside the balloons
               //TODO Make this bulletproof and create a way to get a default 'graph'
               balloonFunction: function(graphDataItem, amGraph){
                   if(typeof graphDataItem.values != 'undefined'){
                       return graphDataItem.category + "<br>" + graphDataItem.values.value.toFixed(2);
                   }else{
                       return "";
                   }
               },
               bullet: "round",
               bulletSize: 6,
               lineColor: "yellow",
               lineThickness: 1,
               negativeLineColor: "red",
               type: "smoothedLine",
               valueField: "phaseC"
           }],
           valueAxes: [{
               id: "phaseA-axis",
               title: " Phase A (Amps) ",
               position: "left",
               color: "green"
           },{
               id: "phaseB-axis",
               title: " Phase B (Amps) ",
               position: "right",
               color: "red"
           },{
               id: "phaseC-axis",
               title: " Phase C (Amps) ",
               position: "right",
               color: "yellow"
           }
           ],
       },{//Empty Mango Chart Mixins
       },{
           //Multi-series chart so create mappings from point to a graph valueField
           dataPointMappings: [{
                   nameEndsWith: 'Phase A (A)',
                   valueField: 'phaseA' 
               },{
                   nameEndsWith: 'Phase B (A)',
                   valueField: 'phaseB'
               },{
                   nameEndsWith: 'Phase C (A)',
                   valueField: 'phaseC'
               }]
       });
       displayConfigurations.push(ampsChart);
       
       //Create a bar chart for use with Point Value Data Providers
       var ampsBarChart = new BarChartConfiguration(
               'ampsBarChartDiv',
               [2,3,4], //List of data provider Ids for this chart
               { //AmChart Mixins
                 
                   "categoryField": "name",
                               "rotate": true,
                                          "color": "whitesmoke",
					"startEffect": "bounce",

                   "graphs": [
                              {
                                  "balloonText": "Average:[[value]]",
                                  "fillAlphas": 0.8,
                                  "id": "AmGraph-1",
                                  "lineAlpha": 0.2,
                                  "title": "Total",
                                  "type": "column",
                                  "valueField": "value",
                                  "lineColor": "#CF000F"
                              }
                          ],
                          "guides": [],
                          "valueAxes": [
                              {
                                  "id": "ValueAxis-1",
                                  "position": "top",
                                  "axisAlpha": 0
                              }
                          ],
       },{//Empty Mango Chart Mixins
           categoryField: "name", //What member of the data point to use as category label/separator
       },{
       });
       displayConfigurations.push(ampsBarChart);
       
       
       //Create a Bar Chart for use with Statistics Data Providers
       var voltageChart = new  SerialChartConfiguration(
               'voltageChartDiv', //Chart DIV id
               [9,10,11], //List of data provider Ids for this chart
               { //AmChart Mixins
                   "categoryField": "xid",
                   "color": "whitesmoke",
                   					"startEffect": "bounce",

                   "graphs": [
                              {
                                  "balloonText": "Minimum:[[value]]",
                                  "fillAlphas": 0.8,
                                  "id": "AmGraph-1",
                                  "lineAlpha": 0.2,
                                  "title": "Minimum",
                                  "type": "column",
                                  "valueField": "minimum"
                              },
                              {
                                  "balloonText": "Maximum:[[value]]",
                                  "fillAlphas": 0.8,
                                  "id": "AmGraph-2",
                                  "lineAlpha": 0.2,
                                  "title": "Maximum",
                                  "type": "column",
                                  "valueField": "maximum"
                              },
                              {
                                  "balloonText": "Average:[[value]]",
                                  "fillAlphas": 0.8,
                                  "id": "AmGraph-3",
                                  "lineAlpha": 0.2,
                                  "title": "Average",
                                  "type": "column",
                                  "valueField": "average"
                              }
                          ],
                          "guides": [],
                          "titles": [
						{
							"id": "Title-1",
							"size": 15,
							"text": "Voltage"
						}
					],
                          "valueAxes": [
                              {
                                  "id": "ValueAxis-1",
                                  "position": "top",
                                  "axisAlpha": 0,
                                  "title": ""
                              }
                          ],
       },{//Empty Mango Chart Mixins
           categoryField: "xid", //What member of the data point to use as category label/separator
       },{
       });
       displayConfigurations.push(voltageChart);
       
       
           var kwhBarChart = new StatisticsBarChartConfiguration(
               'kwhBarChartDiv',
               [12,13,14], //List of data provider Ids for this chart
               { //AmChart Mixins
                   "categoryField": "name",
                               "rotate": false,
                                          "color": "whitesmoke",
                  "graphs": [
                              {
                                  "balloonText": "Minimum:[[value]]",
                                  "fillAlphas": 0.8,
                                  "id": "AmGraph-1",
                                  "lineAlpha": 0.2,
                                  "title": "Minimum",
                                  "type": "column",
                                  "valueField": "minimum"
                              },
                              {
                                  "balloonText": "Maximum:[[value]]",
                                  "fillAlphas": 0.8,
                                  "id": "AmGraph-1",
                                  "lineAlpha": 0.2,
                                  "title": "Maximum",
                                  "type": "column",
                                  "valueField": "maximum"
                              },
                              {
                                  "balloonText": "Average:[[value]]",
                                  "fillAlphas": 0.8,
                                  "id": "AmGraph-2",
                                  "lineAlpha": 0.2,
                                  "title": "Average",
                                  "type": "column",
                                  "valueField": "average"
                              },
                               {
                                  "balloonText": "Integral:[[value]]",
                                  "fillAlphas": 0.8,
                                  "id": "AmGraph-3",
                                  "lineAlpha": 0.2,
                                  "title": "Integral",
                                  "type": "column",
                                  "valueField": "average"
                              },
                            {
                                  "balloonText": "Sum:[[value]]",
                                  "fillAlphas": 0.8,
                                  "id": "AmGraph-3",
                                  "lineAlpha": 0.2,
                                  "title": "Sum",
                                  "type": "column",
                                  "valueField": "average"
                              },
                          ],
                          
                          "guides": [],
                              "titles": [
						{
							"id": "Title-1",
							"size": 15,
							"text": "Statistics"
						}
					],
                          
                          
                          "valueAxes": [
                              {
                                  "id": "ValueAxis-1",
                                  "position": "top",
                                  "axisAlpha": 0,

                              }
                          ],
       },{//Empty Mango Chart Mixins
           categoryField: "name", //What member of the data point to use as category label/separator
       },{
       });
       displayConfigurations.push(kwhBarChart);




 var voltsBarChart = new BarChartConfiguration(
               'voltsBarChartDiv',
               [15,16,17], //List of data provider Ids for this chart
               { //AmChart Mixins
                   "categoryField": "name",
                   "rotate": true,
                   "color": "whitesmoke",
                   "graphs": [
                              {
                                  "balloonText": "Average:[[value]]",
                                  "fillAlphas": 0.8,
                                  "id": "AmGraph-1",
                                  "lineAlpha": 0.2,
                                  "title": "Total",
                                  "type": "column",
                                  "valueField": "value",
                                  "lineColor": "#4183D7"
                              }
                          ],
                          "guides": [],
                          "valueAxes": [
                              {
                                  "id": "ValueAxis-1",
                                  "position": "top",
                                  "axisAlpha": 0
                              }
                          ],
       },{//Empty Mango Chart Mixins
           categoryField: "name", //What member of the data point to use as category label/separator
       },{
       });
       displayConfigurations.push(voltsBarChart);


var kwBarChart = new BarChartConfiguration(
               'kwBarChartDiv',
               [18,19,20], //List of data provider Ids for this chart
               { //AmChart Mixins
                   "categoryField": "name",
                   "rotate": true,
                   "color":"whitesmoke",
                   "graphs": [
                              {
                                  "balloonText": "Average:[[value]]",
                                  "fillAlphas": 0.8,
                                  "id": "AmGraph-1",
                                  "lineAlpha": 0.2,
                                  "title": "Total",
                                  "type": "column",
                                  "valueField": "value"
                              }
                          ],
                          "guides": [],
                          "valueAxes": [
                              {
                                  "id": "ValueAxis-1",
                                  "position": "top",
                                  "axisAlpha": 0
                              }
                          ],
       },{//Empty Mango Chart Mixins
           categoryField: "name", //What member of the data point to use as category label/separator
       },{
       });
       displayConfigurations.push(kwBarChart);


var powerFactorBarChart = new BarChartConfiguration(
               'powerFactorBarChartDiv',
               [21,22,23], //List of data provider Ids for this chart
               { //AmChart Mixins
                   "categoryField": "name",
                   "rotate": true,
                   "color": "whitesmoke",
                   "graphs": [
                              {
                                  "balloonText": "Average:[[value]]",
                                  "fillAlphas": 0.8,
                                  "id": "AmGraph-1",
                                  "lineAlpha": 0.2,
                                  "title": "Total",
                                  "type": "column",
                                  "valueField": "value",
                                  "lineColor": "#A62B2B",
                              }
                          ],
                          "guides": [],
                          "valueAxes": [
                              {
                                  "id": "ValueAxis-1",
                                  "position": "top",
                                  "axisAlpha": 0
                              }
                          ],
       },{//Empty Mango Chart Mixins
           categoryField: "name", //What member of the data point to use as category label/separator
       },{
       });
       displayConfigurations.push(powerFactorBarChart);







       var voltsLineChart = new  SerialChartConfiguration(
               'voltsLineChartDiv', //Chart DIV id
               [24,25,26], //List of data provider Ids for this chart
               { //AmChart Mixins
           titles: [{
               id: "Title-1",
               size: 15,
               text: "Volts "
           }],
           categoryField: "timestamp",
           color: "whitesmoke",
           graphs: [{
               title: "Volts A-N",
               valueAxis: "voltsA-axis",
               //Function to render the text inside the balloons
               //TODO Make this bulletproof and create a way to get a default 'graph'
               balloonFunction: function(graphDataItem, amGraph){
                   if(typeof graphDataItem.values != 'undefined'){
                       return graphDataItem.category + "<br>" + graphDataItem.values.value.toFixed(2);
                   }else{
                       return "";
                   }
               },
               bullet: "square",
               bulletSize: 6,
               lineColor: "green",
               lineThickness: 1,
               negativeLineColor: "red",
               type: "smoothedLine",
               valueField: "voltsA"
           },{              
               title: "Volts B-N",
               valueAxis: "voltsB-axis",
               //Function to render the text inside the balloons
               //TODO Make this bulletproof and create a way to get a default 'graph'
               balloonFunction: function(graphDataItem, amGraph){
                   if(typeof graphDataItem.values != 'undefined'){
                       return graphDataItem.category + "<br>" + graphDataItem.values.value.toFixed(2);
                   }else{
                       return "";
                   }
               },
               bullet: "round",
               bulletSize: 6,
               lineColor: "red",
               lineThickness: 1,
               negativeLineColor: "red",
               type: "smoothedLine",
               valueField: "voltsB"
           },{              
               title: "Volts C-N",
               valueAxis: "voltsC-axis",
               //Function to render the text inside the balloons
               //TODO Make this bulletproof and create a way to get a default 'graph'
               balloonFunction: function(graphDataItem, amGraph){
                   if(typeof graphDataItem.values != 'undefined'){
                       return graphDataItem.category + "<br>" + graphDataItem.values.value.toFixed(2);
                   }else{
                       return "";
                   }
               },
               bullet: "round",
               bulletSize: 6,
               lineColor: "yellow",
               lineThickness: 1,
               negativeLineColor: "red",
               type: "smoothedLine",
               valueField: "voltsC"
           }],
           valueAxes: [{
               id: "voltsA-axis",
               title: " Volts A-N ",
               position: "left",
               color: "green"
           },{
               id: "voltsB-axis",
               title: " Volts B-N ",
               position: "right",
               color: "red"
           },{
               id: "voltsC-axis",
               title: " Volts C-N ",
               position: "right",
               color: "yellow"
           }
           ],
       },{//Empty Mango Chart Mixins
       },{
           //Multi-series chart so create mappings from point to a graph valueField
           dataPointMappings: [{
                   nameEndsWith: 'Voltage A-N (V)',
                   valueField: 'voltsA' 
               },{
                   nameEndsWith: 'Voltage B-N (V)',
                   valueField: 'voltsB'
               },{
                   nameEndsWith: 'Voltage C-N (V)',
                   valueField: 'phaseC'
               }]
       });
       displayConfigurations.push(voltsLineChart);
       



















       //Setup a statistics Display
       displayConfigurations.push(new StatisticsConfiguration('accumulator', [5]));    
       displayConfigurations.push(new StatisticsConfiguration('currentPhaseA', [6]));  
       displayConfigurations.push(new StatisticsConfiguration('currentPhaseB', [7]));    
       displayConfigurations.push(new StatisticsConfiguration('currentPhaseC', [8]));    

       //Create Custom Data Provider To Compute kWh
       var dataProviders = new Array();

       var kwhDataProvider = new PointValueDataProvider(1, {manipulateData: function(pointValues, dataPoint){
           
           var newData = new Array();
           
           if(pointValues.length == 0)
               return newData;
           
          
           var previous = pointValues[0]
           //Subtract previous value from current.
           for(var i=1; i<pointValues.length; i++){
               var current = pointValues[i];
               var entry = {
                       value: current.value - previous.value,
                       timestamp: current.timestamp
               };
               newData.push(entry);
               
               //Move along
               previous = current;
           }
           
           return newData;
       }});
       dataProviders.push(kwhDataProvider);
       
       //Setup Point Configurations
       var pointConfigurations = new Array();
       pointConfigurations.push(new DataPointMatchConfiguration(1, {nameEndsWith: '(kWh)'}));
       pointConfigurations.push(new DataPointMatchConfiguration(2, {nameEndsWith: 'Phase A (A)'}));
       pointConfigurations.push(new DataPointMatchConfiguration(3, {nameEndsWith: 'Phase B (A)'}));
       pointConfigurations.push(new DataPointMatchConfiguration(4, {nameEndsWith: 'Phase C (A)'}));
       pointConfigurations.push(new DataPointMatchConfiguration(5, {nameEndsWith: '(kWh)', providerType: 'Statistics'}))
       pointConfigurations.push(new DataPointMatchConfiguration(6, {nameEndsWith: 'Phase A (A)', providerType: 'Statistics'}))
       pointConfigurations.push(new DataPointMatchConfiguration(7, {nameEndsWith: 'Phase B (A)', providerType: 'Statistics'}))
       pointConfigurations.push(new DataPointMatchConfiguration(8, {nameEndsWith: 'Phase C (A)', providerType: 'Statistics'}))
       pointConfigurations.push(new DataPointMatchConfiguration(9, {nameEndsWith: 'Voltage A-N (V)', providerType: 'Statistics'}))
       pointConfigurations.push(new DataPointMatchConfiguration(10, {nameEndsWith: 'Voltage B-N (V)', providerType: 'Statistics'}))
       pointConfigurations.push(new DataPointMatchConfiguration(11, {nameEndsWith: 'Voltage C-N (V)', providerType: 'Statistics'}))
       pointConfigurations.push(new DataPointMatchConfiguration(12, {nameEndsWith: '(kWh)',providerType: 'Statistics'}));
       pointConfigurations.push(new DataPointMatchConfiguration(13, {nameEndsWith: '(kWh)',providerType: 'Statistics'}));
       pointConfigurations.push(new DataPointMatchConfiguration(14, {nameEndsWith: '(kWh)',providerType: 'Statistics'    }));
       pointConfigurations.push(new DataPointMatchConfiguration(15, {nameEndsWith: 'Voltage A-N (V)'}));
       pointConfigurations.push(new DataPointMatchConfiguration(16, {nameEndsWith: 'Voltage B-N (V)'}));
       pointConfigurations.push(new DataPointMatchConfiguration(17, {nameEndsWith: 'Voltage C-N (V)'}));
       pointConfigurations.push(new DataPointMatchConfiguration(18, {nameEndsWith: 'Real Power A (kW)'}));
       pointConfigurations.push(new DataPointMatchConfiguration(19, {nameEndsWith: 'Real Power B (kW)'}));
       pointConfigurations.push(new DataPointMatchConfiguration(20, {nameEndsWith: 'Real Power C (kW)'}));
       
       pointConfigurations.push(new DataPointMatchConfiguration(21, {nameEndsWith: 'Power Factor A'}));
       pointConfigurations.push(new DataPointMatchConfiguration(22, {nameEndsWith: 'Power Factor B'}));
       pointConfigurations.push(new DataPointMatchConfiguration(23, {nameEndsWith: 'Power Factor C'}));
       
              pointConfigurations.push(new DataPointMatchConfiguration(24, {nameEndsWith: 'Voltage A-N (V)'}))
       pointConfigurations.push(new DataPointMatchConfiguration(25, {nameEndsWith: 'Voltage B-N (V)'}))
       pointConfigurations.push(new DataPointMatchConfiguration(26, {nameEndsWith: 'Voltage C-N (V)'}))
       //Setup Groups
       
       var meterGroups = new DataPointGroupConfiguration({
           groupBy: 'Folder',
           labelAttribute: 'name',
           matchConfigurations: [{
               matchAttribute: 'path',
               startsWith: 'Buildings/City Plex/Meters'
           }]
           });
       
       var groupConfigurations = new Array();
       groupConfigurations.push(meterGroups);
       
       //Create a custom group list view
       var groupListView = new ListViewConfiguration('groupsList', {}, {styleClass: "ui-btn ui-btn-icon-right  ui-icon-gear"});
       
       //Setup Templater
       var templaterConfig = {
               debug: true,
               type: 'PointHierarchy',
               displayConfigurations: displayConfigurations,
               pointConfigurations: pointConfigurations,
               groupConfigurations: groupConfigurations,
               dataProviders: dataProviders,
               groupSelectConfiguration: groupListView,
       }
       
       
       
       templater = new DashboardTemplater(templaterConfig);
            
   });// End When page Ready
   
   /**
	 * Display Errors method
	 */
	function showError(jqXHR, textStatus, errorThrown, mangoMessage){
	    
	    var msg = "";
	    if(textStatus != null)
	        msg += (textStatus + " ");
	    if(errorThrown != null)
	        msg += (errorThrown + " ");
	    if(mangoMessage != null)
	        msg += (mangoMessage + " ");
	    msg += "\n";
	    $("#errors").text(msg);
	}
   
   
   
   
   
   
   </script>
</head>
<body>
<div data-role="page" id="home">
    <div data-theme="a" data-role="header">
     <a href="#nav-panel" data-icon="bars">Meters</a>
     <a href="#help" data-transition="flip" class="ui-btn-icon-right" data-icon="info">Help</a>
<!--<h1></h1> FIXME Hack hack maybe add span or something but I am fine with this for now-->
<div class="mynav">
<a data-transition="flip" class="ui-btn"  href="/private-dashboards/helloWorld.shtm">Hello World</a>
<button class='navButton'>Page 2</button>
<button class='navButton'>Page 3</button>
<button class='navButton'>Page 4</button>
</div>

  </div> <!--end the header-->
<div data-role="panel" data-theme="a" id="nav-panel">
 <ul class="navListView" data-role="listview" data-filter="true" data-rel="close" id="groupsList">
 
 </ul>
</div>

<!--This starts the main content of the page -->
  <div data-role="main"  class="ui-content">


<!--//the top left chart -->
    <div class="barChartLeft">
        <h4>Amps</h4>
        <div id="ampsBarChartDiv" style="width:100%; height:200px; vertical-align: top;  display: inline-block; padding: 10px;"></div>

	    <h4>Volts</h4> 
	    <div id="voltsBarChartDiv" style="width:100%; height:200px; vertical-align: top;  display: inline-block; padding: 10px;"></div>

		<h4>Kilo Watts</h4>
		<div id="kwBarChartDiv" style="width:100%; height:200px; vertical-align: top;  display: inline-block; padding: 10px;"></div>
	
		<h4>Power Factor</h4>
		<div id="powerFactorBarChartDiv" style="width:100%; height:200px; vertical-align: top;  display: inline-block; padding: 10px;"></div>

	</div> <!--The End of the top Left Chart -->
	
	
	
<!--//top right chart -->
    <div class="statsChart">
         <div id="kwhBarChartDiv" style="width:100%; height:400px; vertical-align: top;  display: inline-block; padding: 10px;"></div>
<h3>KWH Watts Per Day</h3>
    </div><!--End the top Right Chart -->





<!--The tabs for the charts  -->
<div id="tab" data-role="tabs" class="lineChartTabs"  data-theme="a">
    <div  data-role="navbar" >
    <ul>
      <li onclick="templater.invalidateChartSize(['kwhChartDiv'], templater);"><a data-transition="flip" data-theme="a" href="#kw">KW</a></li>
      <li onclick="templater.invalidateChartSize(['ampsChartDiv'], templater);"><a data-transition="fade" data-theme="a" href="#amps">Amps</a></li>
      <li onclick="templater.invalidateChartSize(['voltsLineChartDiv'], templater);"><a onclick=""data-transition="fade" data-theme="a" href="#volts">Volts</a></li>
<!--      <li class="mytab" ><a data-transition="fade" data-theme="a" href="#powerFactor" data-ajax="false">Power Factor</a></li>-->
<!--      <li class="mytab" ><a data-transition="fade" data-theme="a" href="#phaseA" data-ajax="false">Phase A</a></li>-->
<!--      <li class="mytab" ><a data-transition="fade" data-theme="a" href="#phaseB" data-ajax="false">Phase B</a></li>-->
<!--      <li class="mytab" ><a data-transition="fade" data-theme="a" href="#phaseC" data-ajax="false">Phase C</a></li>-->
    </ul>
  </div>

  <div id="kw">
     <div  id="kwhChartDiv" style="width:100% ; height:400px; vertical-align: top;  display: inline-block; padding: 10px;"></div>
  </div>

  <div id="amps">
     <div id="ampsChartDiv" style="width:100% ; height:400px; vertical-align: top;  display: inline-block; padding: 10px;"></div>
  </div>
  

    <div id="volts">
    <div id="voltsLineChartDiv" style="width:100% ; height:400px; vertical-align: top;  display: inline-block; padding: 10px;"></div>
  </div>

<!--    <div id="powerFactor" class="ui-content">-->
<!--              <div id="powerFactorChartDiv" style="width:100%; height:400px; vertical-align: top;  display: inline-block; padding: 10px;"></div>-->
<!--  </div>-->
<!--  -->
<!--    <div id="phaseA" class="ui-content">-->
<!--              <div id="phaseAChartDiv" style="width:100%; height:400px; vertical-align: top;  display: inline-block; padding: 10px;"></div>-->
<!--  </div>-->
<!--  -->
<!--    <div id="phaseB" class="ui-content">-->
<!--              <div id="phaseBChartDiv" style="width:100%; height:400px; vertical-align: top;  display: inline-block; padding: 10px;"></div>-->
<!--  </div>-->
<!--    <div id="phaseC" class="ui-content">-->
<!--              <div id="phaseCChartDiv" style="width:100%; height:400px; vertical-align: top;  display: inline-block; padding: 10px;"></div>-->
<!--  </div>-->



<div class="ui-grid-a">

        <div data-role="navbar">
                <ul>
<li>
<div class="col-md-6 col-sm-3 placeholder">
              <input id="startDate"></input>
              <h4>Start Date</h4>
            </div>
            <div class="col-md-6 col-sm-3 placeholder">
              <input id="endDate"></input>
              <h4>End Date</h4>
          </div>
</li>
            <li>
              <div class="ui-field-contain"  style="width=79%">
                <label for="rollup">Rollup:</label>
                <select id="rollup" class="form-control"></select>
              </div>
            </li>
            <li>
              <div class="ui-field-contain"  style="width=79%">
                <label for="timePeriodType">Time Period:</label>
                <select id="timePeriodType" class="form-control"></select>
              </div>
            <li>
              <div class="ui-field-contain"  style="width=79%">
                <label for="timePeriod">Periods:</label>
                <input id="timePeriod" type="number" value="1" class="form-control"/>
              </div>
            </li>
</ul>
</div>
</div>
</div> <!--this is the end of the tabs-->




        <div id="errors">
        </div>
      </div> <!--/ui-content -->
            

voltageChart
	<div data-role="footer" data-theme="a">
		<h4>Powered by mango automation copyright 2014</h4>
	</div><!-- /footer -->

</div> <!-- page one -->ampsChartDiv

<!--Start the acual Help page-->
<div data-role="page" id="help">

	<div data-theme="a" data-role="header"">
		<h3></h3>
		<h3>Help</h3>
		
     <a href="#home" data-icon="back" data-transition="flip">Back</a>
	</div><!-- /header -->

	<div data-role="content">	
		<p>I'm the second in the source order so I'm hidden when the page loads. I'm just shown if a link that references my ID is beeing clicked.</p>		
		<p><a href="#foo">Back to foo</a></p>	
	</div><!-- /content -->

	<div data-role="footer" data-theme="a">
		<h4>Powered by mango automation copyright </script type="text/javascript">return new Date() </script></h4>
	</div><!-- /footer -->
</div><!-- /help page -->

</body>
</html>

