<!DOCTYPE html>
<html>
    <head>
        <title>JSON Data Store</title>
        <!-- Add the Mango Favicon -->
        <link rel="icon" href="/images/favicon.ico">
        
        <!-- Page Style -->
        <link href="/resources/bootstrap/css/bootstrap.min.css" rel="stylesheet">
        <link href="/modules/dashboards/web/private/css/dashboard.css" rel="stylesheet">

        
        <!-- Base Library -->
        <script type="text/javascript" src="/resources/loaderConfig.js"></script>
        <script type="text/javascript" src="/resources/require.js"></script>
        <script type="text/javascript" src="/resources/main.js"></script>
               
        <script type="text/javascript">

        require(['jquery', 'mango/api'],
        function($, MangoAPI) {
            var api = MangoAPI.defaultApi;
            
            //Post
        	$('#postData').on('click', function(){
        		$('#message').text('');
        		api.postJsonData(
        				$('#xid').val(),
        				$('#path').val(),
        				$('#readPermissions').val(),
        				$('#editPermissions').val(),
        				$('#name').val(),
        				JSON.parse($('#json').val())).then(function(response){
        			$('#json').val(JSON.stringify(response.jsonData));
        			showMessage({
        				errorThrown: '',
        				mangoMessage: 'Created'
        			});
        		}).fail(function(response){
        			showMessage(response);
        		});
        	});
            
            //Put
        	$('#putData').on('click', function(){
        		$('#message').text('');
        		api.putJsonData(
        				$('#xid').val(),
        				$('#path').val(),
        				$('#readPermissions').val(),
        				$('#editPermissions').val(),
        				$('#name').val(),
        				JSON.parse($('#json').val())).then(function(response){
        			$('#json').val(JSON.stringify(response.jsonData));
        			showMessage({
        				errorThrown: '',
        				mangoMessage: 'Updated'
        			});
        		}).fail(function(response){
        			showMessage(response);
        		});
        	});
            
            //Delete
        	$('#deleteData').on('click', function(){
        		$('#message').text('');
        		$('#json').val('');
        		api.deleteJsonData(
        				$('#xid').val(),
        				$('#path').val()).then(function(response){
        			showMessage({
        				errorThrown: '',
        				mangoMessage: 'Deleted'
        			});
        		}).fail(function(response){
        			showMessage(response);
        		});
        	});
            
            //Get Data Only
        	$('#getData').on('click', function(){
        		$('#json').val('');
        		$('#message').text('');
        		var path = $('#path').val();
        		var xid = $('#xid').val();
        		api.getJsonData(xid, path).then(function(response){
        			$('#json').val(JSON.stringify(response));
        		}).fail(function(response){
        			showMessage(response);
        		});
        	});
			
            //Get Full Model
        	$('#getFull').on('click', function(){
        		$('#message').text('');
        		$('#json').val('');
        		var xid = $('#xid').val();
        		api.getJsonDataFull(xid).then(function(response){
    				$('#name').val(response.name),
    				$('#readPermissions').val(response.readPermission),
    				$('#editPermissions').val(response.editPermission),
        			$('#json').val(JSON.stringify(response.jsonData));
        		}).fail(function(response){
        			showMessage(response);
        		});
        	});
            
            function showMessage(response){
    			console.log(response);
    			
            	var message = response.errorThrown;
            	if(response.mangoMessage != null)
            		message += ", " + response.mangoMessage;
            	message += "  ";
            	if(	(typeof response.jqXHR != 'undefined') &&
            		(typeof response.jqXHR.responseJSON != 'undefined') &&
            		(typeof response.jqXHR.responseJSON.validationMessages != 'undefined')){
            		message += ": ";
            		for(var i=0; i<response.jqXHR.responseJSON.validationMessages.length; i++)
            		message += response.jqXHR.responseJSON.validationMessages[i].property + " --> " + response.jqXHR.responseJSON.validationMessages[i].message;
            	}
            	$('#message').text(message);
            }

        }); //End Require
        </script>
        
    </head>
<body>
    <div id="main">
        <h1>Store JSON Data</h1>
        <p>Store JSON Data in Mango by providing a xid location for the storage.  The subsets of the data can be returned by using the <b>path</b> parameter.  
         For example if you place the following data into mango with an xid of 'test':
        </p>
        <pre>
          {
            "integer":1,
            "double":12.5,
            "string":"A green door",
            "list":["home","green"],
            "map":{"value":"Test1"}
          }
        </pre>
        <p>http://mango-host/rest/v1/json-data/test/integer will return 1</p>
        <p>http://mango-host/rest/v1/json-data/test/list will return ["home", "green"]</p>
        <p>http://mango-host/rest/v1/json-data/test/map.value will return "Test1"</p>
        <hr>
        <label for="json" style="width: 50px">JSON:</label>
        <textarea id="json" cols="100" rows="20"></textarea>

        <div style="clearfix"></div>
        <label for="xid" style="width: 50px">XID: </label>
        <input type="text" id="xid"></input>
                
        <div style="clearfix"></div>
        <label for="name" style="width: 50px">Name: </label>
        <input type="text" id="name"></input>

        <div style="clearfix"></div>
        <label for="path" style="width: 50px">Path: </label>
        <input type="text" id="path"></input>

        <div style="clearfix"></div>
        <label for="readPermissions" style="width: 50px">Read: </label>
        <input type="text" id="readPermissions"></input>

        <div style="clearfix"></div>
        <label for="editPermissions" style="width: 50px">Edit: </label>
        <input type="text" id="editPermissions"></input>

        <div style="clearfix"></div>
        <div id="message" style="color: red"></div>
        
        <div style="clearfix"></div>
        <button id="getData">Get Data</button>
        <button id="getFull">Get Full</button>
        <button id="postData">Post</button>
        <button id="putData">Put</button>
        <button id="deleteData">Delete</button>
    </div>
</body>
</html>