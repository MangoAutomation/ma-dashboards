<!DOCTYPE html>
<html>
    <head>
        <title>All Data Points Chart</title>
        <!-- Add the Mango Favicon -->
        <link rel="icon" href="/images/favicon.ico">
        
        <!-- Page Style -->
        <style type="text/css">
          @import url("/resources/jquery-ui/jquery.datetimepicker.css");
          @import url("/resources/select2/css/select2.min.css");
        </style>
        <link href="/resources/bootstrap/css/bootstrap.min.css" rel="stylesheet">
        <link href="/modules/dashboards/web/private/css/dashboard.css" rel="stylesheet">

        
        <!-- Base Library -->
        <script type="text/javascript" src="/resources/loaderConfig.js"></script>
        <script type="text/javascript" src="/resources/require.js"></script>
        <script type="text/javascript" src="/resources/main.js"></script>
       
        <script type="text/javascript">
		
        require(['jquery', 'mango/api', 'mango/TimePresetPicker', 'mango/SerialChart',
                 'mango/PointValueDataProvider', 'mango/ProviderOptionsManager', 'jquery.notify'],
        function($, MangoAPI, TimePresetPicker, SerialChart, PointValueDataProvider,
                ProviderOptionsManager) {
        	
            // setup a new serial chart
            var chart = new SerialChart({
                divId: 'chart',
                amChart: {
                    chartScrollbar: null,
                    categoryAxis: {
                        minPeriod: 'ss'
                    }
                }
            });
            // actually create the display on the page
        	chart.createDisplay();
        	
            // setup the time picker with its inputs
            var timePicker = new TimePresetPicker({
                presetPicker: $('#presetPicker'),
                fromPicker: $('#fromPicker'),
                toPicker: $('#toPicker')
            });
            
            // the provider manager notifies the data providers when the
            // inputs change and refreshes the displays
        	var providerManager = new ProviderOptionsManager({
        	    errorFunction: MangoAPI.logError,
        	    timePicker: timePicker,
                rollupPicker: $('#rollup'),
                timePeriodTypePicker: $('#timePeriodTypes'),
                timePeriodsPicker: $('#timePeriods')
            });
        	
            // create a point value data provider
            var dataProvider = new PointValueDataProvider(null, {
                // convert point values to their specified unit
                apiOptions: { converted: true }
            });
            
            // link the chart to the data provider
            dataProvider.addListener(chart);
            
            // link the provider to the provider manager
            providerManager.addProvider(dataProvider);
        	
        	$('#queryNow').on('click', function() {
       			loadPoints();
           	});
        	
        	$('#clearChart').on('click', function() {
        	    dataProvider.clear(true);
           	});

        	/**
             * Run the query and load the points
             */
            function loadPoints() {
      		  //Do Query
                MangoAPI.defaultApi.queryPoints($('#query').val()).then(function(results){
					
                	//Add the points to the data provider
                    for (var i=0; i<results.items.length; i++) {
                    	var point = results.items[i];
                	    dataProvider.addDataPoint(point);
                    }
                	//When done adding points, refresh
                    providerManager.refreshProviders();
               }).fail(MangoAPI.logError);
            }
          	
        });
        </script>
        
    </head>
  <body>
    <div id="main">
     <h1>Data Point Chart</h1>
     <p>
      Enter an RQL query then press the 'Query Now' button, all points returned from the query will 
      be placed into the chart.  Press the Clear Chart button to remove all charted points. 
     </p>
     <p>
      <b>Note:</b> Not all members of the dataPoint object are query-able.  See what is available <a href="/rest/v1/data-points/explain-query">here</a>.  
      The JSON output explains the RQL properties available as 'aliases' for the columns.  
     </p>
     <div class="row">
      <div class="col-md-12">
        <label for="query">Query:</label><input type="text" id="query" value="xid=voltage|xid=temperature" style="width:400px"/>
        <button type="button" id="queryNow">Query Now</button>
        <button type="button" id="clearChart">Clear Chart</button>
       </div>
      </div>
      <hr></hr>
      <!-- Chart Inputs -->
      <div class="row">
        <div class="col-md-4">
          <select id="presetPicker" class="form-control"></select>
        </div>
        <div class="col-md-4">
          <input id="fromPicker" class="form-control">
        </div>
        <div class="col-md-4">
          <input id="toPicker" class="form-control">
        </div>
      </div>
      <div class="row">
        <div class="col-md-4">
         <select id="rollup" class="form-control"></select>
        </div>
        <div class="col-md-4">
         <input id="timePeriods"  type="number" class="form-control" value="1"></input>
        </div>
        <div class="col-md-4">
         <select id="timePeriodTypes" class="form-control"></select>
        </div>
      </div>      
      <div class="row">
        <div class="col-md-12">
         <div id="chart" style="height: 400px"></div>
        </div>
      </div>
     
    </div>
  </body>
</html>