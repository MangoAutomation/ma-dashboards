<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Mango Api: Source: RealtimeDataProvider.js</title>

    <script src="scripts/prettify/prettify.js"> </script>
    <script src="scripts/prettify/lang-css.js"> </script>
    <!--[if lt IE 9]>
      <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
    <link type="text/css" rel="stylesheet" href="styles/prettify-tomorrow.css">
    <link type="text/css" rel="stylesheet" href="styles/jsdoc-default.css">
</head>

<body>

<div id="main">

    <h1 class="page-title">Source: RealtimeDataProvider.js</h1>

    



    
    <section>
        <article>
            <pre class="prettyprint source linenums"><code>/**
 * Data Provider for RealTime Updates Via Web Sockets
 * 
 * @copyright 2015 {@link http://infiniteautomation.com|Infinite Automation Systems, Inc.} All rights reserved.
 * @author Jared Wiltshire
 * @module {RealtimeDataProvider} mango/RealtimeDataProvider
 * @see RealtimeDataProvider
 * @augments DataProvider
 */
define(['jquery', './DataProvider', './PointEventManager'],
function($, DataProvider, PointEventManager) {
"use strict";

//use a static PointEventManager which is shared between all RealtimeDataProviders
/**
 * @member {PointEventManager} pointEventManager - Static member for all RealtimeDataProviders
 */
var pointEventManager = new PointEventManager();

/**
 * Constructor
 * @constructs RealtimeDataProvider
 * @param {!number|string} id - Data Provider ID
 * @param {Object} options - Options for provider
 * @augments DataProvider
 */
function RealtimeDataProvider(id, options) {
    DataProvider.apply(this, arguments);
    this.eventHandler = this.eventHandler.bind(this);
}

RealtimeDataProvider.prototype = Object.create(DataProvider.prototype);


/**
 * Return data as Array of size 1
 * @type {boolean}
 * @default false
 */
RealtimeDataProvider.prototype.asArray = false;

/**
 * Type of Data Provider
 * @type {string}
 * @default 'RealtimeDataProvider'
 * @const
 */
RealtimeDataProvider.prototype.type = 'RealtimeDataProvider';

/**
 * What events do we register for 
 * @type {string} 
 * @default 'Update'
 */
RealtimeDataProvider.prototype.eventType = 'UPDATE';

/** 
 * Number of initial values to request at start
 * @type {number} 
 * @default 1 
 */
RealtimeDataProvider.prototype.numInitialValues = 1;


/**
 * Clear out our pointConfigurations if required
 * 
 * Signal to all Listeners to clear ALL their data
 * 
 * @param {boolean} clearConfigurations - boolean to clear pointConfigurations too
 */
RealtimeDataProvider.prototype.clear = function(clearConfigurations) {
    var self = this;

    if (clearConfigurations) {
        $.each(this.pointConfigurations, function(key, pointConfig) {
            var point = self.toPoint(pointConfig);
            pointEventManager.unsubscribe(point.xid, self.eventType, self.eventHandler);
        });
    }
    
    DataProvider.prototype.clear.apply(this, arguments);
};

/**
 * This provider never needs to reload as its continually updated
 * @param {?Object} changedOptions
 * @returns {boolean} 
 */
RealtimeDataProvider.prototype.needsToLoad = function(changedOptions) {
    // never need to reload as its continually updated
    if (this.previousOptions)
        return false;
    return true;
};

/**
 * @param {Object} point - point to load with xid member
 * @param {Object} options - options {from: from date, to: to date}
 * @returns {Object} Statistics Object
 */
RealtimeDataProvider.prototype.loadPoint = function(point, options) {
    return this.mangoApi.getLatestValues(point.xid, this.numInitialValues, this.apiOptions);
};

/**
 * Disable the data provider by unsubscribing for events
 * on the Web Socket
 */
RealtimeDataProvider.prototype.disable = function() {
    var self = this;
    $.each(this.pointConfigurations, function(key, pointConfig) {
        var point = self.toPoint(pointConfig);
        pointEventManager.unsubscribe(point.xid, self.eventType, self.eventHandler);
    });

    DataProvider.prototype.disable.apply(this, arguments);
};

/**
 * Enable the data provider by subscribing for events 
 * on the WebSocket
 */
RealtimeDataProvider.prototype.enable = function() {
    var self = this;
    $.each(this.pointConfigurations, function(key, pointConfig) {
        var point = self.toPoint(pointConfig);
        pointEventManager.subscribe(point.xid, self.eventType, self.eventHandler);
    });

    DataProvider.prototype.enable.apply(this, arguments);
};

/**
 * Add a data point configuration to our list
 * @param {Object} dataPointConfiguration - configuration to add
 */
RealtimeDataProvider.prototype.addDataPoint = function(dataPointConfiguration) {
    var ret = DataProvider.prototype.addDataPoint.apply(this, arguments);
    if (!ret)
        return ret;
    
    if (this.enabled) {
        var point = this.toPoint(dataPointConfiguration);
        var xid = point.xid;
        try {
            pointEventManager.subscribe(xid, this.eventType, this.eventHandler);
        }
        catch (e) {
            // fail silently if WebSocket not supported
        }
    }
};

/**
 * Handle the Events
 * @param {Object} event
 * @param {Object} payload
 */
RealtimeDataProvider.prototype.eventHandler = function(event, payload) {
    if ((payload.event !== this.eventType) &amp;&amp; (payload.event !== 'REGISTERED'))
        return;
    
    var value = $.extend({}, payload.value);
    
    value.originalValue = value.value;
    value.renderedValue = payload.renderedValue;
    value.convertedValue = payload.convertedValue;
    
    if (this.apiOptions.rendered)
        value.value = value.renderedValue;
    else if (this.apiOptions.converted)
        value.value = value.convertedValue;
    
    if(this.asArray === true)
    	value = [value];
    var self = this;
    $.each(this.pointConfigurations, function(key, pointConfig) {
        var point = self.toPoint(pointConfig);
        if (point.xid === payload.xid) {
            self.notifyListeners(value, point);
        }
    });
};

DataProvider.registerProvider(RealtimeDataProvider);
return RealtimeDataProvider;

});</code></pre>
        </article>
    </section>




</div>

<nav>
    <h2><a href="index.shtm">Home</a></h2><h3>Modules</h3><ul><li><a href="module-mango_AccumulatorDataProvider.shtm">mango/AccumulatorDataProvider</a></li><li><a href="module-mango_AccumulatorRollupDataProvider.shtm">mango/AccumulatorRollupDataProvider</a></li><li><a href="module-mango_api.shtm">mango/api</a></li><li><a href="module-mango_autologin.shtm">mango/autologin</a></li><li><a href="module-mango_BarChart.shtm">mango/BarChart</a></li><li><a href="module-mango_BaseDisplay.shtm">mango/BaseDisplay</a></li><li><a href="module-mango_CssDisplay.shtm">mango/CssDisplay</a></li><li><a href="module-mango_DataProvider.shtm">mango/DataProvider</a></li><li><a href="module-mango_exportConfig.shtm">mango/exportConfig</a></li><li><a href="module-mango_GaugeChart.shtm">mango/GaugeChart</a></li><li><a href="module-mango_GridDisplay.shtm">mango/GridDisplay</a></li><li><a href="module-mango_HistoricalDataProvider.shtm">mango/HistoricalDataProvider</a></li><li><a href="module-mango_HTMLDisplay.shtm">mango/HTMLDisplay</a></li><li><a href="module-mango_ListDisplay.shtm">mango/ListDisplay</a></li><li><a href="module-mango_PointValueDataProvider.shtm">mango/PointValueDataProvider</a></li><li><a href="module-mango_PointValueQueryInput.shtm">mango/PointValueQueryInput</a></li><li><a href="module-mango_ProviderOptionsManager.shtm">mango/ProviderOptionsManager</a></li><li><a href="module-mango_RealtimeDataProvider.shtm">mango/RealtimeDataProvider</a></li><li><a href="module-mango_SerialChart.shtm">mango/SerialChart</a></li><li><a href="module-mango_statisticsBarChart.shtm">mango/statisticsBarChart</a></li><li><a href="module-mango_StatisticsDataProvider.shtm">mango/StatisticsDataProvider</a></li><li><a href="module-mango_StatisticsTableDisplay.shtm">mango/StatisticsTableDisplay</a></li><li><a href="module-mango_TextDisplay.shtm">mango/TextDisplay</a></li><li><a href="module-mango_TimePresetPicker.shtm">mango/TimePresetPicker</a></li><li><a href="module-mango_User.shtm">mango/User</a></li></ul><h3>Classes</h3><ul><li><a href="AccumulatorDataProvider.shtm">AccumulatorDataProvider</a></li><li><a href="AccumulatorRollupDataProvider.shtm">AccumulatorRollupDataProvider</a></li><li><a href="BarChart.shtm">BarChart</a></li><li><a href="BaseDisplay.shtm">BaseDisplay</a></li><li><a href="CssDisplay.shtm">CssDisplay</a></li><li><a href="DataProvider.shtm">DataProvider</a></li><li><a href="GaugeChart.shtm">GaugeChart</a></li><li><a href="GridDisplay.shtm">GridDisplay</a></li><li><a href="HistoricalDataProvider.shtm">HistoricalDataProvider</a></li><li><a href="HTMLDisplay.shtm">HTMLDisplay</a></li><li><a href="ListDisplay.shtm">ListDisplay</a></li><li><a href="MangoAPI.shtm">MangoAPI</a></li><li><a href="PointValueDataProvider.shtm">PointValueDataProvider</a></li><li><a href="ProviderOptionsManager.shtm">ProviderOptionsManager</a></li><li><a href="RealtimeDataProvider.shtm">RealtimeDataProvider</a></li><li><a href="SerialChart.shtm">SerialChart</a></li><li><a href="StatisticsDataProvider.shtm">StatisticsDataProvider</a></li><li><a href="StatisticsTableDisplay.shtm">StatisticsTableDisplay</a></li><li><a href="TextDisplay.shtm">TextDisplay</a></li></ul><h3>Tutorials</h3><ul><li><a href="tutorial-allDataPointsChart.shtm">Charting Multiple Data Points</a></li><li><a href="tutorial-currentValue.shtm">Current Value</a></li><li><a href="tutorial-dataPointBarChart.shtm">Data Point Bar Chart</a></li><li><a href="tutorial-dataPointChart.shtm">Data Point Charting</a></li><li><a href="tutorial-dataPointQuery.shtm">Query Data Points</a></li><li><a href="tutorial-events.shtm">Events Query</a></li><li><a href="tutorial-eventWebSocket.shtm">Live Events</a></li><li><a href="tutorial-gridDisplay_.shtm">Grid Display</a></li><li><a href="tutorial-listDisplay_.shtm">List Display</a></li><li><a href="tutorial-pointValueGauge.shtm">Gauge Chart</a></li><li><a href="tutorial-pointValueWebSocket.shtm">Live Data</a></li><li><a href="tutorial-realtimeTable.shtm">Realtime Table Display</a></li><li><a href="tutorial-setPointValue.shtm">Setting a Value</a></li><li><a href="tutorial-statisticsTableDisplay_.shtm">Statistics Table Display</a></li><li><a href="tutorial-textDisplay_.shtm">Text Display</a></li></ul>
</nav>

<br class="clear">

<footer>
     <a href="http://infiniteautomation.com" target="ia">&copy; Infinite Automation Systems, Inc.</a>
</footer>

<script> prettyPrint(); </script>
<script src="scripts/linenumber.js"> </script>
</body>
</html>
