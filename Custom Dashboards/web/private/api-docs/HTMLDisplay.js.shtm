<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Mango Api: Source: HTMLDisplay.js</title>

    <script src="scripts/prettify/prettify.js"> </script>
    <script src="scripts/prettify/lang-css.js"> </script>
    <!--[if lt IE 9]>
      <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
    <link type="text/css" rel="stylesheet" href="styles/prettify-tomorrow.css">
    <link type="text/css" rel="stylesheet" href="styles/jsdoc-default.css">
</head>

<body>

<div id="main">

    <h1 class="page-title">Source: HTMLDisplay.js</h1>

    



    
    <section>
        <article>
            <pre class="prettyprint source linenums"><code>/**
 * Display Raw HTML in a Dom Node
 * 
 * @copyright 2015 {@link http://infiniteautomation.com|Infinite Automation Systems, Inc.} All rights reserved.
 * @author Jared Wiltshire, Terry Packer
 * @module {HTMLDisplay} mango/HTMLDisplay
 * @see HTMLDisplay
 * @augments TextDisplay
 */
define(['jquery', './TextDisplay'], function($, TextDisplay) {
'use strict';

/**
 * @constructs HTMLDisplay
 * @augments TextDisplay
 * @param {Object} options - options for display
 */
function HTMLDisplay(options) {
	TextDisplay.apply(this, arguments);

    this.valueAttribute = 'value';
    this.suffix = '';
    this.decimalPlaces = 2;
    this.inhibitUpdateOnFocus = $(null);

    for(var i in options) {
        this[i] = options[i];
    }
    
    this.dataProviderIds = [this.dataProviderId];
};

HTMLDisplay.prototype = Object.create(TextDisplay.prototype);


/**
 * Data Provider listener to clear data
 */
HTMLDisplay.prototype.onClear = function() {
    if (this.useVal) {
        var inputs = this.selection.filter('input');
        var others = this.selection.not(inputs);
        inputs.val('');
        others.html('');
    }
    else {
        this.selection.html('');
    }
    delete this.previous;
};

/**
 * Data Provider Listener
 * On Data Provider load we add new data
 * @param {Array|number|PointValueTime} data - Value to update with if array then data[0] is used
 * @param {Object} dataPoint - data point that corresponds to the value
 */
HTMLDisplay.prototype.onLoad = function(data, dataPoint) {
    if ($.isArray(data)) {
        if (data.length) {
            data = data[0];
        }
        else return;
    }
    
    if (typeof data.minimum == 'object') {
        data.minimum = data.minimum.value;
        data.maximum = data.maximum.value;
        data.difference = data.maximum - data.minimum;
    }
    
    var value = data[this.valueAttribute];
    if (value === null || value === undefined) {
        // we will often want convertedValue or renderedValue but they aren't available
        // on non-numeric points
        value = data.value;
    }
    
    if (typeof this.manipulateValue === 'function')
        value = this.manipulateValue(value, dataPoint);

    var rendered = this.renderHTML(value);
    
    if (typeof this.onChange === 'function') {
        if (this.previous !== undefined &amp;&amp; rendered !== this.previous) {
            this.onChange();
        }
        this.previous = rendered;
    }
    
    if (this.useVal) {
        var inputs = this.selection.filter('input');
        var others = this.selection.not(inputs);
        
        if (this.inhibitUpdateOnFocus.filter(':focus').length === 0) {
            inputs.filter(':not(:focus)').val(rendered);
        }
        others.html(rendered);
    }
    else {
        this.selection.html(rendered);
    }
};

/**
 * @param {object} value - Value to render
 * @param {DataPoint} dataPoint - Data Point to render
 */
HTMLDisplay.prototype.renderHTML = function(value, dataPoint) {
    // PointValueTime
    if (value &amp;&amp; typeof value === 'object' &amp;&amp; 'value' in value &amp;&amp; 'timestamp' in valuevalue) {
    	return this.renderValue(value.value);
    }
    return this.renderValue(value);
};

return HTMLDisplay;

}); // define
</code></pre>
        </article>
    </section>




</div>

<nav>
    <h2><a href="index.shtm">Home</a></h2><h3>Modules</h3><ul><li><a href="module-mango_AccumulatorDataProvider.shtm">mango/AccumulatorDataProvider</a></li><li><a href="module-mango_AccumulatorRollupDataProvider.shtm">mango/AccumulatorRollupDataProvider</a></li><li><a href="module-mango_api.shtm">mango/api</a></li><li><a href="module-mango_autologin.shtm">mango/autologin</a></li><li><a href="module-mango_BaseDisplay.shtm">mango/BaseDisplay</a></li><li><a href="module-mango_CssDisplay.shtm">mango/CssDisplay</a></li><li><a href="module-mango_DataProvider.shtm">mango/DataProvider</a></li><li><a href="module-mango_exportConfig.shtm">mango/exportConfig</a></li><li><a href="module-mango_GridDisplay.shtm">mango/GridDisplay</a></li><li><a href="module-mango_HistoricalDataProvider.shtm">mango/HistoricalDataProvider</a></li><li><a href="module-mango_HTMLDisplay.shtm">mango/HTMLDisplay</a></li><li><a href="module-mango_ListDisplay.shtm">mango/ListDisplay</a></li><li><a href="module-mango_PointValueDataProvider.shtm">mango/PointValueDataProvider</a></li><li><a href="module-mango_PointValueQueryInput.shtm">mango/PointValueQueryInput</a></li><li><a href="module-mango_providerOptionsManager.shtm">mango/providerOptionsManager</a></li><li><a href="module-mango_RealtimeDataProvider.shtm">mango/RealtimeDataProvider</a></li><li><a href="module-mango_serialChart.shtm">mango/serialChart</a></li><li><a href="module-mango_statisticsBarChart.shtm">mango/statisticsBarChart</a></li><li><a href="module-mango_StatisticsDataProvider.shtm">mango/StatisticsDataProvider</a></li><li><a href="module-mango_StatisticsTableDisplay.shtm">mango/StatisticsTableDisplay</a></li><li><a href="module-mango_TextDisplay.shtm">mango/TextDisplay</a></li><li><a href="module-mango_TimePresetPicker.shtm">mango/TimePresetPicker</a></li></ul><h3>Classes</h3><ul><li><a href="AccumulatorDataProvider.shtm">AccumulatorDataProvider</a></li><li><a href="AccumulatorRollupDataProvider.shtm">AccumulatorRollupDataProvider</a></li><li><a href="BaseDisplay.shtm">BaseDisplay</a></li><li><a href="CssDisplay.shtm">CssDisplay</a></li><li><a href="DataProvider.shtm">DataProvider</a></li><li><a href="GridDisplay.shtm">GridDisplay</a></li><li><a href="HistoricalDataProvider.shtm">HistoricalDataProvider</a></li><li><a href="HTMLDisplay.shtm">HTMLDisplay</a></li><li><a href="ListDisplay.shtm">ListDisplay</a></li><li><a href="MangoAPI.shtm">MangoAPI</a></li><li><a href="module-mango_serialChart.shtm">mango/serialChart</a></li><li><a href="PointValueDataProvider.shtm">PointValueDataProvider</a></li><li><a href="ProviderOptionsManager.shtm">ProviderOptionsManager</a></li><li><a href="RealtimeDataProvider.shtm">RealtimeDataProvider</a></li><li><a href="StatisticsDataProvider.shtm">StatisticsDataProvider</a></li><li><a href="StatisticsTableDisplay.shtm">StatisticsTableDisplay</a></li><li><a href="TextDisplay.shtm">TextDisplay</a></li></ul><h3>Tutorials</h3><ul><li><a href="tutorial-currentValue.shtm">Current Value</a></li><li><a href="tutorial-dataPointChart.shtm">Data Point Charting</a></li><li><a href="tutorial-dataPointQuery.shtm">Query Data Points</a></li><li><a href="tutorial-events.shtm">Events Query</a></li><li><a href="tutorial-eventWebSocket.shtm">Live Events</a></li><li><a href="tutorial-gridDisplay_.shtm">Grid Display</a></li><li><a href="tutorial-listDisplay_.shtm">List Display</a></li><li><a href="tutorial-pointValueWebSocket.shtm">Live Data</a></li><li><a href="tutorial-setPointValue.shtm">Setting a Value</a></li><li><a href="tutorial-statisticsTableDisplay_.shtm">Statistics Table Display</a></li><li><a href="tutorial-textDisplay_.shtm">Text Display</a></li></ul>
</nav>

<br class="clear">

<footer>
     <a href="http://infiniteautomation.com" target="ia">&copy; Infinite Automation Systems, Inc.</a>
</footer>

<script> prettyPrint(); </script>
<script src="scripts/linenumber.js"> </script>
</body>
</html>
