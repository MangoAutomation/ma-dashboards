<!DOCTYPE html>

<html>
<head>
	<meta charset="utf-8">
	<!-- Add the Mango Favicon -->
    <link rel="icon" href="/images/favicon.ico">
        
	<!-- Page Style -->
    <style type="text/css">
    </style>
	
	
	<title>30 Day Kwh Bar Chart</title>
    
    <!-- JQuery -->
    <script type="text/javascript" src="/resources/jquery/jquery-1.11.2.js"></script>    	
      
    <link href="/resources/jquery-ui/jquery.datetimepicker.css" rel="stylesheet">
 
    <script type="text/javascript" src="/resources/jquery-ui/jquery.datetimepicker.js"></script>
    <!-- Charting Library -->
    <script type="text/javascript" src="/resources/amcharts/amcharts.js"></script>
    <script type="text/javascript" src="/resources/amcharts/serial.js"></script>
    <script type="text/javascript" src="/resources/amcharts/gauge.js"></script>

    <!-- Mango Rest API Helper -->
    <script type="text/javascript" src="/mango-javascript/mango/v1/mangoApi.js"></script>         
        
    <!-- Mango Templating API -->
    <!-- Display Widgets -->
    <script type="text/javascript" src="/mango-javascript/mango/v1/serialChart.js"></script>
    <script type="text/javascript" src="/mango-javascript/mango/v1/barChart.js"></script>
    <script type="text/javascript" src="/mango-javascript/mango/v1/statisticsBarChart.js"></script>
    <script type="text/javascript" src="/mango-javascript/mango/v1/pieChart.js"></script>
    <script type="text/javascript" src="/mango-javascript/mango/v1/statistics.js"></script>
    <script type="text/javascript" src="/mango-javascript/mango/v1/gaugeChart.js"></script>
    <script type="text/javascript" src="/mango-javascript/mango/v1/simpleDisplay.js"></script>
    
    
    <!-- Data Providers -->
    <script type="text/javascript" src="/resources/extend.js"></script>
    <script type="text/javascript" src="/mango-javascript/mango/v1/dataProvider.js"></script>
    <script type="text/javascript" src="/mango-javascript/mango/v1/pointValueDataProvider.js"></script>
    <script type="text/javascript" src="/mango-javascript/mango/v1/realtimePointValueDataProvider.js"></script>
    <script type="text/javascript" src="/mango-javascript/mango/v1/statisticsDataProvider.js"></script>
    <!-- Input Widgets -->
    <script type="text/javascript" src="/mango-javascript/mango/v1/dateTimePicker.js"></script>
    <script type="text/javascript" src="/mango-javascript/mango/v1/rollupPicker.js"></script>
    <script type="text/javascript" src="/mango-javascript/mango/v1/timePeriodTypePicker.js"></script>
    <script type="text/javascript" src="/mango-javascript/mango/v1/input.js"></script>
    <script type="text/javascript" src="/mango-javascript/mango/v1/select.js"></script>
    <script type="text/javascript" src="/mango-javascript/mango/v1/listView.js"></script>
    <!-- Templater Core -->
    <script type="text/javascript" src="/mango-javascript/mango/v1/dataDisplayManager.js"></script>
    <script type="text/javascript" src="/mango-javascript/mango/v1/dataPointMatcher.js"></script>
    <script type="text/javascript" src="/mango-javascript/mango/v1/dataPointGroup.js"></script>  
    <script type="text/javascript" src="/mango-javascript/mango/v1/pointHierarchyGrouper.js"></script>
    <script type="text/javascript" src="/mango-javascript/mango/v1/dashboardTemplater.js"></script>

   <script type="text/javascript">
   
   //Define Global Variables
   var templater;
   
   $( document ).ready(function(){
       
       //Setup Display Configurations
       var displayConfigurations = new Array();
       
       var kwhChart = new  SerialChartConfiguration(
               'kwhChartDiv', //Chart DIV id
               [1], //List of data provider Ids for this chart
               { //AmChart Mixins
           titles: [{
               id: "Title-1",
               size: 15,
               text: "KWH "
           }],
           categoryField: "timestamp",
           graphs: [{
               title: "Kilo watts per hour",
               valueAxis: "kwh-axis",
               bullet: "square",
               bulletSize: 6,
               lineColor: "green",
               lineThickness: 1,
               negativeLineColor: "red",
               type: "smoothedLine",
               valueField: "value"
           }],
           valueAxes: [{
               id: "kwh-axis",
               title: " KWH ",
               position: "left"
           }],
       });
       displayConfigurations.push(kwhChart);
               
       //Create a bar chart for use with Point Value Data Providers
       var kwhBarChart = new BarChartConfiguration(
               'kwhBarChartDiv',
               [1], //List of data provider Ids for this chart
               { //AmChart Mixins
                   rotate: false,
                   categoryField: "time",
                   categoryAxis: {
                       "gridPosition": "start",
                       "labelRotation": 45
                   },
                   graphs: [
                              {
                                  "balloonText": "Average:[[value]]",
                                  "fillAlphas": 0.8,
                                  "id": "AmGraph-1",
                                  "lineAlpha": 0.2,
                                  "title": "Total",
                                  "type": "column",
                                  "valueField": "value"
                              }
                          ],
                          "guides": [],
                          "valueAxes": [
                              {
                                  "id": "ValueAxis-1",
                                  "position": "top",
                                  "axisAlpha": 0
                              }
                          ],
       },{//Empty Mango Chart Mixins
           /**
            * Default behaviour is to average them values
            * Data Provider Listener
            * On Data Provider load we add new data
            */
           onLoad: function(data, dataPoint){
			   this.removeLoading();
               //Create one entry for every piece of data
               for(var i=0; i<data.length; i++){
                   var entry = {
                           time: new Date(data[i].timestamp).toLocaleDateString(),
                           value: data[i].value
                   };
                   this.amChart.dataProvider.push(entry);
               }
               this.amChart.validateData();
           }
       },{
       });
       displayConfigurations.push(kwhBarChart);       
       //Create Data Providers
       var dataProviders = new Array();
       var customDataProvider = new PointValueDataProvider(1, {
           /**
            * Method that is called before publishing the data to the Displays
            * it is here that we can modify the data
            */
           manipulateData: function(pointValues, dataPoint){
              
               var newData = new Array();
               
               if(pointValues.length == 0)
                   return newData;
               
               var previous = pointValues[0]
               //Subtract previous value from current.
               for(var i=1; i<pointValues.length; i++){
                   var current = pointValues[i];
                   var entry = {
                           value: current.value - previous.value,
                           timestamp: current.timestamp
                   };
                   newData.push(entry);
                   
                   //Move along
                   previous = current;
               }
               
               return newData;
           }           
       });
       dataProviders.push(customDataProvider);
       
       //Setup Point Configurations
       var pointConfigurations = new Array();
       pointConfigurations.push(new DataPointMatchConfiguration(1, [{matchAttribute: 'name', regex: /.*\(kWh\)/}]));

       //Setup Groups
       var meterGroups = new DataPointGroupConfiguration({
           groupBy: 'Folder',
           labelAttribute: 'name',
           matchConfigurations: [{
               matchAttribute: 'path',
               regex: /\/Buildings\/City Plex\/Meters\/M.*/
           }]
           });
       
       var groupConfigurations = new Array();
       groupConfigurations.push(meterGroups);
       
       //Create a custom group list view
       var groupListView = new ListViewConfiguration('groupsList', {}, {styleClass: "ui-btn"});
       
       //Setup Templater, Previous 30 Days (more accurately previous 24Hrs * 30);
       var to = new Date();
       var from = new Date(to.getTime() - 1000*60*60*24*30);
       var templaterConfig = {
               debug: true,
               type: 'PointHierarchy',
               displayConfigurations: displayConfigurations,
               pointConfigurations: pointConfigurations,
               groupConfigurations: groupConfigurations,
               dataProviders: dataProviders,
               groupSelectConfiguration: groupListView,
               
               //Setup the Date/Rollups
               startDate: from,
               endDate: to,
               rollup: 'AVERAGE',
               timePeriodType: 'DAYS',
               timePeriods: 1,
       };
       
       
       
       templater = new DashboardTemplater(templaterConfig);
       
       
            
   });// End When page Ready
   </script>





</head>
<body>
    <h2>This example is deprecated because it uses the legacy Javascript API.  For more up-to-date examples see the tutorial's folder.</h2>

    <div id="errors"></div> <!-- The templater defaults to using a div with id errors if it exists -->
    <ul id="groupsList"></ul>
    <p> Using a custom Point Value Data Provider we computer the change in kwh per sample.  The Line chart plots the 
    change for every day.  The Bar Chart plots the total per day.  Click the Desired Meter to start.
    </p>
    
    <div  id="kwhChartDiv" style="width:100%; height:400px; vertical-align: top;  display: inline-block; padding: 10px;"></div>
    <div  id="kwhBarChartDiv" style="width:100%; height:400px; vertical-align: top;  display: inline-block; padding: 10px;"></div>
    
</body>
</html>

