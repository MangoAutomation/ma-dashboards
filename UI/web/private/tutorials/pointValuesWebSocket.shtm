<!DOCTYPE html>
<html>
    <head>
        <title>Live Point Values For Multiple Points Using Realtime Provider</title>
        <!-- Add the Mango Favicon -->
        <link rel="icon" href="/images/favicon.ico">
        
        
        <!-- Page Style -->
        <style></style>
        <link href="/resources/bootstrap/css/bootstrap.min.css" rel="stylesheet">
        <link href="/modules/mangoUI/web/private/css/dashboard.css" rel="stylesheet">
        
        <!-- Base Library -->
        <script type="text/javascript" src="/resources/loaderConfig.js"></script>
        <script type="text/javascript" src="/resources/require.js"></script>
        <script type="text/javascript" src="/resources/main.js"></script>
        
        
        <script type="text/javascript">
		
        require(['jquery', 'mango/api', 'mango/RealtimeDataProvider', 'mango/GridDisplay', 'dojo/_base/declare', 'dstore/Memory', 'dstore/Trackable', 'moment-timezone'],
        function($, MangoAPI, RealtimeDataProvider, GridDisplay, declare, Memory, Trackable, moment) {
            
        	var idCounter = 0; //Increment every message for grid row id
        	
        	//Create custom event handler to provide more info to display
            var pointEventHandler = function(event, payload) {
              if ((payload.event !== this.eventType) && (payload.event !== 'REGISTERED'))
                  return;
              
              var value = $.extend({}, payload.value);
              
              value.originalValue = value.value;
              value.renderedValue = payload.renderedValue;
              value.convertedValue = payload.convertedValue;
              
              //Additional information not provided by the RealtimeDataProvider
              value.xid = payload.xid;
              value.id = idCounter;
              idCounter++;
              //End additional info
              
              if (this.apiOptions.rendered)
                  value.value = value.renderedValue;
              else if (this.apiOptions.converted)
                  value.value = value.convertedValue;
              
              if(this.asArray === true)
              	value = [value];
              var self = this;
              $.each(this.pointConfigurations, function(key, pointConfig) {
                  var point = self.toPoint(pointConfig);
                  if (point.xid === payload.xid) {
                      self.notifyListeners(value, point);
                  }
              });
          	};

        	
  			//Create the realtime provider        	
        	var realtimeProvider = new RealtimeDataProvider(null, {
                numInitialValues: 10,
                apiOptions: { rendered: true },
                eventHandler: pointEventHandler
            });
        	
        	//Create the Grid Display
        	var grid = new GridDisplay({
        		selection: $('#grid'),
        		gridOptions: {
        			columns: {
        				xid: {label: "XID"},
        				timestamp: {label: "Time", formatter: renderTime},
        				value: {label: "Value"}
        			},
        			loadingMessage: 'Loading...',
        			noDataMessage: 'No Data...',
        		},
        		//Override the store to allow multiple values at the same timestamp
        		// as the GridDisplay's store uses timestamp as the ID
        		store: new declare([Memory, Trackable])({
        			data: [],
        			idProperty: 'id'
        		})
        	});
        	grid.createDisplay();
        	
        	//Add the grid as a listener
        	realtimeProvider.addListener(grid);
            /**
             * Register with the given XID 
             */
             $('#registerButton').on('click', function(){
                 var xid = $('#xid').val();
                 if(xid == ""){
                   	var statusRow = [];
                  	statusRow.push('No Xid To Register');
                  	statusRow.push(new Date());
                  	//Append a status row
                  	$('#status').append(createRow(statusRow));
                 }else{
                	 //Add the data point, all we need is the xid
                	 realtimeProvider.addDataPoint({xid: xid});	 
                 }
            });
            
           /**
            * Register for all data points
            */
            $('#registerAllButton').on('click', function(){
            	MangoAPI.defaultApi.getAllPoints().then(function(result){
            		for(var i=0; i<result.items.length; i++){
            			realtimeProvider.addDataPoint(result.items[i]);
            		}	
            	});
		
            });
          
          /**
           * Un-register for all events
           */
           $('#unRegisterButton').on('click', function(){
              var xid = $('#xid').val();
              if(xid == ""){
                	var statusRow = [];
                	statusRow.push('No Xid To Un-register');
                	statusRow.push(new Date());
                	//Append a status row
                	$('#status').append(createRow(statusRow));
              }else{
              	//Disable messages for this point
              	realtimeProvider.removeDataPoint({xid: xid});
              }
           });
            
          function renderTime(value) {
            var m = moment(value);
            var format = moment().diff(m, 'days', true) >= 1 ? 'LLLS' : 'LTS';
          	return m.format(format);
          }
        });
        </script>
    </head>
	<body>
      <div id="main">
        <h1>Live Point Values using Realtime Data Provider</h1>
        <div class="row">
          <div class="col-md-12">
            <label for="xid">Xid: </label><input type="text" id="xid" value="voltage"/>
            <button id="registerButton" class="btn btn-default">Register</button>
            <button id="unRegisterButton" class="btn btn-default">Un-Register</button>
            <button id="registerAllButton" class="btn btn-default">Register for All Points</button>
          </div>
        </div>
        
        <div class="row">
          <div class="col-md-12">
            <table class="table">
              <tr><th>Status</th><th>Time</th></tr>
              <tbody id="status"></tbody>
            </table>
          </div>
        </div>
        
        <div class="row">
          <div class="col-md-12">
          <div id="grid"></div>
          </div>
        </div>
        
       </div>  
    </body>
</html>